<?php


namespace Drupal\miniorange_saml;

use DOMElement;
use DOMNode;
use DOMXPath;
use DOMDocument;
use Drupal\Core\Render\Markup;
use Drupal\Component\Utility\Xss;
use Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\miniorange_saml\MiniorangeSAMLConstants;
class Utilities
{
    public static function customUserFields()
    {
        $j3 = array('' => "\123\x65\154\145\x63\164\40\101\x74\x74\162\x69\x62\165\x74\145\40\x56\141\154\165\x65");
        $Fb = User::load(\Drupal::currentUser()->id());
        $IL = $Fb->toArray();
        foreach ($IL as $C2 => $hs) {
            if (!(strpos($C2, "\146\151\x65\x6c\x64\137") === 0)) {
                goto ku;
            }
            $j3[$C2] = $C2;
            ku:
            TF:
        }
        Ic:
        return $j3;
    }
    static function isMultiple($ox)
    {
        $dJ = User::load(\Drupal::currentUser()->id());
        $lS = $dJ->get($ox);
        $q0 = $lS->getFieldDefinition()->getFieldStorageDefinition();
        return $q0->isMultiple();
    }
    public static function isCustomerRegistered(&$form, $form_state, $aB = false)
    {
        global $base_url;
        $J8 = $base_url . "\57\141\144\x6d\151\156\57\143\157\x6e\x66\151\x67\57\160\145\157\160\154\x65\57\x6d\151\x6e\151\x6f\162\x61\156\147\x65\x5f\163\141\x6d\x6c\x2f\x63\165\163\x74\x6f\155\x65\162\x5f\x73\x65\x74\165\160\x2f";
        if (\Drupal::config("\x6d\x69\x6e\x69\x6f\162\x61\x6e\147\145\x5f\x73\141\x6d\x6c\x2e\x73\x65\164\164\x69\156\x67\x73")->get("\x6d\x69\x6e\151\x6f\162\x61\x6e\147\145\137\163\x61\155\x6c\x5f\143\x75\x73\x74\157\155\145\162\137\141\144\x6d\151\156\137\145\x6d\141\x69\x6c") == NULL || \Drupal::config("\155\151\156\x69\157\x72\141\156\x67\145\137\x73\x61\155\x6c\x2e\x73\x65\x74\164\x69\156\147\163")->get("\x6d\151\x6e\151\157\x72\141\156\x67\145\137\x73\141\155\154\137\x63\x75\163\164\157\155\145\162\x5f\x69\144") == NULL || \Drupal::config("\155\151\x6e\151\157\x72\x61\x6e\x67\x65\137\163\141\x6d\154\x2e\x73\145\164\x74\x69\x6e\147\x73")->get("\x6d\151\156\x69\157\x72\141\156\147\x65\137\x73\141\155\x6c\137\143\165\x73\x74\157\155\145\x72\137\x61\144\155\151\156\137\164\157\153\145\156") == NULL || \Drupal::config("\155\x69\156\151\157\x72\141\156\147\145\x5f\x73\x61\155\154\x2e\163\145\164\x74\x69\x6e\x67\x73")->get("\x6d\x69\x6e\151\157\x72\x61\x6e\x67\x65\137\x73\x61\155\154\137\143\x75\x73\164\157\155\145\162\x5f\141\160\151\137\x6b\145\171") == NULL) {
            goto FB;
        }
        if (\Drupal::config("\155\x69\156\x69\157\x72\x61\x6e\147\145\x5f\x73\x61\155\154\56\x73\x65\164\x74\x69\x6e\x67\x73")->get("\x6d\151\x6e\151\x6f\162\141\x6e\x67\x65\x5f\163\141\x6d\154\137\x6c\151\143\x65\156\x73\145\x5f\x6b\x65\171") == NULL) {
            goto ve;
        }
        return FALSE;
        goto PZ;
        ve:
        $form["\x6d\x61\x72\153\165\x70\x5f\155\163\x67"] = array("\43\155\141\162\x6b\165\x70" => "\74\x64\x69\x76\x20\143\154\x61\163\x73\x3d\x22\x6d\157\137\x73\x61\155\x6c\137\162\145\x67\151\x73\x74\145\x72\137\x6d\x65\x73\163\x61\x67\x65\42\76\131\x6f\165\x20\156\x65\145\144\x20\x74\x6f\x20\x3c\141\x20\x68\x72\145\146\75\x22" . $J8 . "\42\40\76\x76\x65\162\x69\x66\171\40\171\157\165\162\x20\154\151\x63\x65\x6e\x73\x65\x3c\57\x61\76\x20\x6b\145\x79\40\x62\x65\146\x6f\162\x65\40\165\x73\151\156\147\40\164\150\x69\163\40\x6d\157\x64\165\154\x65\x2e\x3c\x2f\x64\151\166\x3e");
        return TRUE;
        PZ:
        goto Tm;
        FB:
        $form["\155\x61\162\x6b\165\160\137\162\145\147\x5f\x6d\x73\147"] = array("\43\155\x61\162\x6b\x75\160" => "\x3c\144\x69\166\x20\x63\x6c\141\x73\163\x3d\42\x6d\x6f\x5f\x73\x61\155\154\137\x72\145\147\151\x73\164\x65\162\137\x6d\x65\163\163\141\147\145\42\x3e\131\157\x75\x20\156\x65\x65\x64\40\x74\157\40\x3c\x61\x20\x68\162\x65\x66\x3d\42" . $J8 . "\42\40\76\x6c\157\x67\x69\156\74\x2f\141\76\x20\165\x73\151\156\147\x20\x6d\151\x6e\x69\117\x72\141\156\x67\x65\40\141\x63\x63\157\165\156\164\x20\142\x65\x66\x6f\162\x65\x20\x75\x73\x69\156\147\40\x74\x68\x69\163\x20\155\157\x64\x75\154\x65\56\74\x2f\144\151\166\76");
        return TRUE;
        Tm:
    }
    public static function spConfigGuide(array &$form, \Drupal\Core\Form\FormStateInterface $form_state)
    {
        $form["\155\x69\156\x69\157\162\x61\156\x67\145\137\x69\144\x70\x5f\147\x75\x69\x64\x65\x5f\154\151\x6e\153\x31"] = array("\x23\155\141\x72\x6b\165\160" => "\x3c\144\151\166\40\143\154\141\x73\x73\x3d\x22\155\x6f\x5f\x73\141\155\154\137\164\x61\142\154\145\x5f\x6c\x61\x79\x6f\165\x74\x20\155\x6f\x5f\x73\141\x6d\x6c\137\143\157\156\164\141\151\x6e\145\x72\137\x32\x22\x20\x69\x64\x3d\x22\155\157\137\x67\x75\151\x64\145\137\166\164\42\x3e\12\40\x20\x20\40\x20\x20\40\40\x20\x20\40\40\x20\x20\x20\x20\x20\40\x20\x20\x3c\144\151\x76\x20\163\164\x79\154\x65\x3d\42\146\x6f\x6e\x74\x2d\x73\151\x7a\x65\72\x20\61\x35\160\170\x3b\x22\76\x54\157\x20\163\x65\145\40\144\145\x74\141\151\x6c\145\x64\40\x64\x6f\x63\165\x6d\x65\x6e\x74\141\x74\x69\x6f\156\40\157\x66\x20\x68\x6f\167\x20\164\157\40\143\157\x6e\x66\151\x67\x75\x72\x65\40\104\x72\x75\160\x61\154\40\123\101\x4d\x4c\40\123\x50\40\167\151\164\150\40\141\156\171\40\111\x64\145\156\x74\151\164\171\x20\120\162\157\166\x69\x64\145\162\74\x2f\144\x69\x76\76\x3c\x2f\142\162\76");
        $PW = Markup::create("\74\x73\x74\162\x6f\156\147\76\74\141\x20\150\162\x65\146\x3d\42\x68\x74\164\x70\x73\x3a\x2f\x2f\160\154\165\147\x69\x6e\x73\56\x6d\151\156\151\x6f\x72\141\x6e\x67\145\56\x63\157\x6d\x2f\144\x72\x75\160\141\154\55\163\151\x6e\x67\154\145\55\x73\x69\147\156\x2d\163\163\157\x2d\x75\163\x69\x6e\147\55\x61\x7a\x75\x72\145\x2d\141\x64\x2d\x69\144\x70\57\x22\x20\143\154\141\163\163\x3d\42\155\x6f\x5f\147\165\x69\x64\145\x5f\164\145\170\164\x2d\x63\157\x6c\157\162\x22\x20\x74\141\x72\147\145\164\75\x22\x5f\x62\x6c\141\x6e\x6b\x22\76\x41\x7a\x75\x72\145\40\101\104\74\57\x61\76\74\x2f\163\x74\x72\157\156\x67\x3e");
        $nU = Markup::create("\x3c\x73\164\x72\x6f\x6e\147\x3e\x3c\x61\x20\x68\x72\145\146\75\x22\150\164\164\160\163\x3a\x2f\57\x70\154\165\147\x69\x6e\x73\56\x6d\x69\x6e\x69\x6f\162\141\x6e\147\145\56\143\157\155\x2f\x64\x72\x75\160\141\x6c\x2d\x73\x69\x6e\x67\154\x65\x2d\163\151\x67\x6e\x2d\163\x73\x6f\x2d\165\x73\151\x6e\x67\55\141\x64\x66\x73\55\151\x64\x70\42\40\143\154\x61\x73\163\75\42\x6d\157\x5f\x67\x75\x69\144\145\x5f\x74\145\170\164\x2d\x63\x6f\154\x6f\x72\x22\x20\x74\x61\x72\x67\145\164\x3d\42\137\x62\154\141\156\x6b\42\x3e\x41\104\106\x53\74\x2f\141\76\x3c\57\163\164\x72\x6f\156\x67\x3e");
        $mY = Markup::create("\x3c\x73\x74\x72\x6f\156\147\76\74\x61\x20\143\154\x61\x73\x73\75\42\155\157\x5f\147\x75\151\144\x65\137\x74\145\170\164\x2d\143\157\x6c\x6f\x72\42\40\150\162\x65\x66\75\x22\150\x74\x74\160\x73\72\x2f\x2f\160\x6c\165\x67\x69\156\x73\x2e\155\x69\x6e\x69\157\162\141\156\x67\x65\56\143\x6f\155\x2f\144\x72\x75\x70\141\x6c\x2d\163\x69\x6e\147\x6c\x65\55\x73\x69\x67\x6e\55\x73\x73\x6f\x2d\x75\x73\151\x6e\147\x2d\157\x6b\x74\x61\x2d\x69\144\x70\57\42\40\164\141\162\147\x65\x74\x3d\42\x5f\142\x6c\141\x6e\153\x22\76\x4f\153\x74\x61\74\57\x61\x3e\74\57\x73\164\x72\157\x6e\x67\76");
        $Co = Markup::create("\74\x73\164\162\x6f\x6e\147\x3e\74\x61\40\150\162\145\146\75\x22\150\x74\x74\160\163\72\x2f\x2f\x70\154\x75\x67\151\156\163\x2e\155\x69\x6e\x69\157\162\x61\156\x67\x65\x2e\143\x6f\x6d\57\144\x72\x75\160\x61\154\55\163\151\156\147\x6c\x65\55\163\151\x67\x6e\x2d\163\x73\157\x2d\x75\x73\x69\156\x67\x2d\x67\x6f\x6f\147\154\145\55\141\160\160\163\55\x69\144\160\57\42\40\x63\154\x61\163\163\75\42\x6d\157\x5f\147\165\x69\144\145\x5f\164\x65\170\164\x2d\143\157\x6c\157\x72\42\x20\x74\141\x72\x67\145\x74\75\42\137\x62\x6c\141\156\153\x22\x3e\x47\x6f\157\x67\154\145\40\101\160\x70\x73\74\57\x61\x3e\x3c\57\x73\164\x72\x6f\x6e\147\x3e");
        $dq = Markup::create("\74\x73\x74\x72\x6f\x6e\x67\76\x3c\x61\x20\x68\162\x65\146\x3d\42\150\x74\164\160\163\72\x2f\57\x70\x6c\x75\x67\151\156\x73\56\155\x69\156\151\x6f\162\x61\x6e\147\x65\56\x63\157\x6d\57\144\x72\x75\160\x61\x6c\55\163\x69\156\147\x6c\x65\55\163\151\x67\x6e\55\163\x73\157\55\165\x73\x69\156\147\x2d\x73\x61\x6c\145\x73\x66\157\162\143\145\x2d\x69\x64\x70\x2f\42\x20\143\154\x61\163\163\x3d\42\155\157\x5f\x67\165\x69\144\145\x5f\x74\x65\x78\x74\55\x63\157\x6c\x6f\x72\42\x20\164\141\162\x67\145\x74\x3d\42\137\142\x6c\141\156\x6b\x22\x3e\x53\141\x6c\x65\x73\146\157\x72\143\x65\x3c\x2f\x61\76\x3c\x2f\163\x74\162\157\156\147\76");
        $F1 = Markup::create("\x3c\163\x74\x72\x6f\156\147\76\x3c\141\40\143\x6c\141\163\163\75\42\155\x6f\137\147\165\151\144\x65\x5f\x74\145\170\164\55\143\157\x6c\x6f\x72\x22\40\150\x72\145\x66\x3d\42\150\x74\164\160\163\72\x2f\x2f\x70\x6c\x75\147\151\156\163\x2e\x6d\x69\x6e\x69\157\x72\141\x6e\147\145\56\x63\157\155\57\144\162\165\x70\x61\154\55\163\x69\x6e\147\154\145\x2d\163\x69\147\x6e\55\163\x73\x6f\x2d\x75\x73\x69\x6e\x67\x2d\x6d\151\156\x69\x6f\162\x61\x6e\147\145\x2d\x69\144\x70\57\42\40\164\x61\162\x67\x65\164\x3d\42\x5f\x62\154\141\156\x6b\42\x3e\155\151\156\151\x4f\162\x61\x6e\x67\x65\x3c\x2f\141\x3e\74\57\x73\x74\162\x6f\156\x67\76");
        $TF = Markup::create("\x3c\163\x74\162\x6f\x6e\x67\x3e\74\141\40\x63\154\x61\163\x73\x3d\42\x6d\157\x5f\x67\165\151\x64\x65\137\x74\x65\x78\x74\55\x63\x6f\x6c\157\x72\42\x20\150\162\145\146\x3d\x22\150\x74\x74\x70\x73\x3a\x2f\x2f\160\154\165\x67\151\156\163\56\x6d\151\156\151\x6f\x72\x61\156\x67\145\56\x63\x6f\155\57\x67\165\x69\x64\x65\55\x66\157\162\55\144\162\165\x70\x61\x6c\x2d\x73\x69\156\147\154\x65\55\x73\x69\147\x6e\x2d\x6f\156\55\165\163\151\156\x67\55\160\x69\x6e\x67\157\x6e\x65\55\141\x73\x2d\x69\x64\x65\x6e\x74\x69\164\171\x2d\x70\x72\x6f\x76\151\x64\145\162\x22\40\x74\141\162\147\x65\164\75\42\137\142\154\x61\x6e\x6b\x22\x3e\x50\151\x6e\147\x4f\x6e\145\x3c\57\x61\76\74\57\x73\164\162\157\156\x67\76");
        $R0 = Markup::create("\x3c\163\164\x72\x6f\x6e\x67\76\74\141\x20\150\162\x65\x66\x3d\x22\x68\164\x74\x70\x73\x3a\57\57\160\x6c\x75\147\x69\x6e\163\56\155\151\x6e\151\157\x72\141\x6e\147\x65\x2e\143\x6f\x6d\57\x64\162\x75\x70\x61\154\55\x73\x69\156\147\154\x65\55\x73\x69\x67\x6e\55\163\163\x6f\x2d\x75\x73\x69\x6e\147\55\x6f\156\145\x6c\157\x67\x69\156\55\x69\144\160\x2f\42\40\x63\x6c\x61\163\163\75\x22\155\x6f\x5f\147\x75\151\144\145\137\164\145\x78\164\55\x63\x6f\x6c\x6f\162\42\40\x74\141\162\x67\145\x74\75\x22\x5f\142\x6c\141\156\x6b\x22\76\117\x6e\x65\x6c\157\147\151\156\74\x2f\x61\76\74\x2f\x73\x74\162\x6f\156\147\x3e");
        $qV = Markup::create("\x3c\163\164\162\157\x6e\147\x3e\74\141\40\150\x72\x65\146\x3d\x22\150\x74\164\x70\x73\x3a\x2f\57\160\x6c\165\x67\x69\x6e\163\x2e\x6d\151\156\151\157\162\141\156\147\145\56\x63\157\155\57\x64\x72\165\x70\141\154\x2d\163\x69\x6e\x67\154\x65\x2d\163\x69\147\x6e\55\163\x73\x6f\55\x75\163\151\x6e\x67\55\x62\151\164\x69\165\x6d\x2d\x69\x64\160\x22\x20\x63\x6c\x61\x73\x73\x3d\42\x6d\157\x5f\x67\165\x69\x64\145\137\x74\145\170\x74\55\x63\157\154\x6f\x72\x22\x20\x74\x61\x72\x67\x65\x74\75\x22\137\142\154\x61\156\x6b\42\76\x42\x69\164\x69\x75\x6d\x3c\x2f\141\76\74\57\163\x74\162\x6f\x6e\147\76");
        $rV = Markup::create("\74\x73\x74\162\157\x6e\147\76\74\x61\40\150\x72\145\x66\75\x22\150\164\164\160\x73\72\x2f\x2f\x70\x6c\165\147\151\156\163\56\x6d\x69\x6e\151\x6f\162\x61\156\x67\x65\56\x63\157\x6d\57\144\162\165\x70\x61\x6c\x2d\163\x69\156\x67\x6c\145\55\x73\151\147\x6e\x2d\x73\x73\157\x2d\x75\x73\x69\x6e\147\x2d\x63\145\x6e\x74\x72\151\146\171\55\151\x64\x70\x2f\x22\40\x63\x6c\141\x73\163\75\42\155\157\x5f\147\165\151\144\x65\x5f\x74\145\x78\x74\55\143\x6f\154\x6f\162\x22\x20\164\141\x72\x67\x65\x74\75\42\137\142\154\x61\x6e\x6b\42\x3e\x43\x65\x6e\164\162\x69\x66\x79\x3c\57\141\76\74\x2f\163\164\x72\157\x6e\147\x3e");
        $H5 = Markup::create("\74\x73\164\162\157\156\x67\76\x3c\x61\40\x68\162\x65\146\x3d\x22\x68\x74\164\160\x73\72\x2f\57\160\154\x75\x67\151\x6e\163\x2e\x6d\x69\x6e\151\157\162\x61\156\x67\145\x2e\143\157\155\x2f\x67\x75\x69\144\145\55\x74\x6f\55\143\157\x6e\146\x69\x67\165\162\x65\55\157\x72\141\143\x6c\145\x2d\x61\143\143\x65\x73\x73\55\x6d\x61\x6e\141\147\145\x72\55\141\163\x2d\151\x64\x70\x2d\x61\156\x64\x2d\x64\x72\165\x70\141\154\x2d\x61\x73\55\163\x70\x22\40\143\x6c\x61\x73\x73\x3d\x22\x6d\157\x5f\147\x75\x69\x64\145\137\164\x65\170\164\x2d\x63\157\154\x6f\162\x22\x20\x74\141\x72\x67\x65\x74\x3d\x22\137\142\x6c\141\x6e\x6b\x22\x3e\117\x72\x61\x63\154\145\74\57\x61\76\x3c\57\163\x74\162\157\x6e\x67\76");
        $cX = Markup::create("\74\x73\164\162\x6f\x6e\x67\76\x3c\x61\40\150\162\x65\146\x3d\42\x68\164\164\x70\x73\x3a\x2f\x2f\x70\x6c\165\x67\x69\156\x73\x2e\x6d\x69\x6e\151\x6f\162\x61\156\x67\145\56\143\157\155\57\144\162\x75\x70\141\154\x2d\x73\151\x6e\x67\154\x65\x2d\163\x69\x67\x6e\55\x6f\x6e\55\163\x73\x6f\55\165\163\x69\156\147\x2d\x6a\142\x6f\163\x73\x2d\153\x65\171\x63\154\157\x61\153\55\x61\163\x2d\x69\x64\160\x22\x20\x63\x6c\x61\163\163\75\42\155\x6f\x5f\147\165\x69\144\x65\x5f\x74\x65\170\164\x2d\x63\x6f\x6c\x6f\x72\x22\x20\x74\141\162\147\145\164\x3d\42\x5f\x62\x6c\141\x6e\153\x22\76\112\142\x6f\x73\x73\x20\x4b\145\171\143\x6c\x6f\141\153\74\x2f\141\76\x3c\x2f\x73\164\x72\x6f\156\x67\x3e");
        $PR = Markup::create("\x3c\163\x74\x72\x6f\x6e\147\76\x3c\141\x20\x68\162\x65\146\x3d\x22\x68\x74\x74\160\x73\x3a\57\x2f\160\x6c\x75\x67\x69\x6e\x73\x2e\155\x69\x6e\151\x6f\162\141\156\147\x65\x2e\143\157\x6d\57\x67\x75\x69\144\x65\x2d\x66\157\x72\55\x70\151\x6e\147\x66\x65\144\145\x72\141\164\145\x2d\141\163\55\151\x64\x70\55\x77\151\164\150\55\144\162\165\x70\x61\x6c\x22\40\143\154\x61\x73\x73\x3d\x22\155\x6f\x5f\x67\x75\151\x64\145\137\x74\x65\170\164\x2d\x63\x6f\154\x6f\x72\42\40\164\141\162\147\145\x74\x3d\42\137\142\x6c\141\156\x6b\x22\76\x50\x69\156\x67\x20\106\x65\144\x65\162\141\x74\x65\x3c\x2f\x61\76\x3c\x2f\x73\164\162\x6f\156\147\76");
        $Q0 = Markup::create("\74\x73\x74\162\x6f\x6e\147\76\74\141\x20\x68\162\145\x66\x3d\x22\150\164\164\160\163\72\x2f\57\x70\x6c\x75\x67\x69\156\163\56\x6d\x69\156\x69\x6f\162\141\156\147\x65\x2e\143\157\155\57\147\165\151\144\145\55\146\157\162\x2d\157\x70\x65\x6e\x61\155\55\x61\x73\55\x69\144\x70\x2d\167\x69\x74\x68\x2d\x64\x72\x75\x70\x61\154\x22\x20\x63\154\141\x73\163\75\42\155\157\137\x67\165\151\x64\x65\137\x74\145\170\164\55\x63\157\154\x6f\x72\42\x20\x74\141\162\x67\145\164\75\42\137\x62\x6c\141\x6e\x6b\42\76\117\x70\x65\156\101\x4d\x3c\x2f\x61\76\x3c\x2f\163\x74\x72\157\156\147\x3e");
        $u9 = Markup::create("\74\163\164\162\157\156\x67\76\x3c\x61\40\x68\162\145\146\x3d\42\x68\x74\164\160\x73\72\x2f\57\x70\x6c\165\x67\x69\156\163\x2e\155\151\156\151\x6f\x72\x61\x6e\147\x65\56\x63\x6f\155\57\144\162\165\x70\x61\154\55\163\x69\x6e\x67\x6c\145\x2d\x73\x69\x67\x6e\55\x6f\x6e\55\x73\163\157\55\x75\x73\151\156\147\55\x61\165\164\x68\141\156\x76\151\154\x2d\141\163\x2d\x69\x64\160\42\40\x63\x6c\x61\x73\x73\75\x22\155\x6f\x5f\x67\165\151\x64\x65\x5f\164\x65\x78\x74\x2d\x63\157\154\157\x72\42\x20\164\141\x72\x67\145\x74\x3d\x22\137\x62\x6c\141\156\x6b\x22\76\101\165\x74\150\x41\x6e\166\151\x6c\x3c\57\141\76\74\x2f\x73\x74\162\157\x6e\x67\x3e");
        $M3 = Markup::create("\x3c\x73\x74\x72\x6f\156\x67\x3e\74\141\40\150\x72\145\x66\75\x22\150\164\x74\x70\x73\x3a\57\57\x70\154\x75\x67\x69\x6e\163\x2e\155\x69\156\x69\x6f\x72\141\156\x67\145\56\x63\x6f\x6d\x2f\x67\x75\151\144\145\55\146\157\162\55\141\x75\164\150\x30\x2d\x61\163\x2d\151\144\160\x2d\x77\151\164\150\55\144\x72\165\x70\141\154\x22\40\x63\x6c\x61\163\163\x3d\x22\x6d\157\137\x67\165\151\x64\145\137\164\145\170\164\55\143\157\154\157\x72\x22\x20\164\x61\162\147\145\164\75\42\x5f\x62\154\x61\156\x6b\x22\x3e\x61\165\x74\150\60\74\57\141\x3e\x3c\57\x73\x74\162\x6f\156\147\76");
        $lI = Markup::create("\74\163\164\x72\x6f\x6e\x67\x3e\x3c\141\x20\150\162\145\146\x3d\42\x68\x74\x74\x70\x73\x3a\57\x2f\x70\154\x75\147\x69\156\163\56\x6d\x69\156\x69\157\x72\141\x6e\x67\x65\56\143\x6f\155\x2f\147\165\x69\144\x65\55\x66\x6f\162\55\144\162\x75\x70\141\x6c\x2d\163\x69\156\147\154\x65\x2d\x73\x69\x67\x6e\x2d\157\156\x2d\163\x73\157\x2d\x75\x73\x69\156\147\x2d\x72\x73\141\x2d\163\145\143\x75\x72\x69\144\x2d\141\x73\x2d\x69\x64\160\42\x20\143\154\141\x73\x73\75\42\x6d\157\x5f\x67\x75\151\144\145\137\164\145\x78\x74\55\x63\x6f\154\157\162\42\x20\164\x61\162\x67\x65\164\x3d\x22\x5f\142\x6c\141\x6e\153\x22\x3e\x52\123\x41\40\x53\145\x63\x75\x72\x49\x44\74\57\x61\x3e\x3c\57\x73\164\162\157\x6e\147\76");
        $I0 = Markup::create("\x3c\163\164\x72\x6f\156\147\x3e\74\141\40\x68\x72\x65\146\75\x22\x68\164\x74\x70\x73\x3a\x2f\57\160\154\x75\147\x69\156\x73\x2e\x6d\151\156\x69\x6f\162\x61\156\x67\x65\x2e\x63\x6f\x6d\57\143\x6f\156\146\x69\x67\x75\x72\145\55\144\162\x75\x70\141\x6c\55\163\x61\x6d\x6c\55\163\x69\x6e\x67\154\x65\x2d\163\151\147\156\x2d\x6f\156\x22\40\x63\x6c\141\163\163\x3d\x22\x6d\x6f\137\147\x75\151\144\145\x5f\x74\145\170\164\x2d\143\x6f\x6c\x6f\x72\x22\40\x74\x61\x72\x67\145\164\x3d\42\137\142\x6c\x61\x6e\x6b\x22\76\x4f\x74\150\x65\162\40\111\x44\x50\74\57\x61\x3e\74\x2f\x73\x74\x72\157\156\147\76");
        $i7 = array(array($PW, $nU), array($mY, $Co), array($dq, $R0), array($H5, $cX), array($rV, $TF), array($PR, $Q0), array($u9, $M3), array($F1, $lI));
        $Sl = array(array("\x64\x61\164\141" => t("\111\x64\x65\x6e\164\x69\x74\171\x20\120\162\157\x76\151\144\145\x72\40\123\145\164\165\160\x20\x47\x75\151\144\x65\x73"), "\143\157\154\163\160\141\156" => 2, "\163\x74\171\x6c\145" => "\164\145\170\164\x2d\x61\154\x69\147\156\x3a\40\143\145\x6e\x74\145\x72"));
        $form["\x6d\157\144\x75\x6c\145\163"] = array("\x23\164\171\160\145" => "\x74\x61\142\x6c\x65", "\x23\150\x65\x61\x64\x65\162" => $Sl, "\x23\x72\x6f\167\163" => $i7, "\x23\141\x74\x74\162\x69\142\x75\x74\145\x73" => ["\x63\x6c\141\163\163" => ["\x6d\x6f\137\147\x75\151\x64\x65\137\164\141\x62\154\145"]]);
        $form["\155\157\x64\165\154\x65\163"][8][0] = ["\x23\x6d\x61\x72\x6b\165\x70" => $I0, "\x23\167\x72\x61\x70\x70\x65\162\137\x61\x74\164\162\x69\x62\x75\x74\x65\x73" => ["\x63\x6f\154\x73\x70\x61\156" => 2]];
        self::faq($form, $form_state);
        $form["\155\x69\156\x69\x6f\162\x61\156\x67\145\x5f\x73\x70\x5f\147\x75\151\x64\145\x5f\x6c\151\156\153\x5f\x65\156\x64"] = array("\43\x6d\141\x72\x6b\x75\160" => "\x3c\57\x64\x69\166\x3e");
    }
    public static function faq(&$form, &$form_state)
    {
        $form["\x6d\x69\156\151\157\x72\141\156\x67\145\137\x66\141\161"] = array("\43\155\x61\x72\153\165\x70" => "\x3c\144\x69\x76\40\143\x6c\x61\x73\163\75\x22\x6d\x6f\x5f\x73\141\x6d\x6c\137\x74\x65\170\x74\137\x63\x65\x6e\x74\145\x72\42\76\x3c\142\x3e\74\x2f\x62\x3e\xa\x20\x20\40\40\40\40\x20\40\x20\40\x20\40\40\x20\40\40\40\40\x20\40\x20\x20\x20\40\40\x20\x3c\141\40\143\x6c\x61\x73\x73\x3d\x22\x62\x75\x74\x74\x6f\x6e\x20\x62\165\x74\164\x6f\156\x2d\55\160\162\x69\x6d\x61\x72\171\40\142\165\x74\164\157\x6e\55\x2d\163\x6d\141\154\x6c\42\x20\x68\x72\145\x66\x3d\42\150\164\164\x70\x73\x3a\x2f\x2f\x66\141\x71\x2e\x6d\151\x6e\x69\x6f\162\141\x6e\147\145\56\x63\157\155\57\x6b\142\57\144\x72\x75\x70\141\x6c\57\163\141\x6d\x6c\55\144\162\165\160\x61\x6c\x2f\42\40\164\141\x72\x67\145\164\x3d\42\x5f\142\x6c\x61\x6e\x6b\x22\x3e\x46\101\x51\x73\x3c\57\x61\x3e\12\40\40\x20\x20\x20\x20\x20\x20\40\x20\x20\40\40\x20\40\40\40\40\x20\40\x20\x20\40\x20\x20\40\x3c\x62\76\x3c\x2f\x62\76\x3c\x61\40\143\x6c\x61\163\x73\75\x22\x62\x75\x74\164\x6f\156\40\x62\165\164\164\x6f\x6e\x2d\x2d\x70\x72\151\155\x61\162\x79\x20\142\165\x74\x74\157\x6e\55\x2d\163\155\141\x6c\154\42\x20\x68\162\145\146\75\42\x68\x74\164\x70\163\72\57\x2f\146\157\x72\x75\x6d\x2e\155\151\x6e\151\x6f\162\x61\x6e\147\145\x2e\x63\x6f\155\57\x22\x20\164\x61\162\x67\145\164\75\x22\137\x62\x6c\x61\x6e\x6b\42\76\101\x73\153\40\x71\165\145\163\x74\x69\x6f\x6e\x73\40\x6f\x6e\40\146\x6f\162\x75\155\74\57\x61\76\74\57\x64\151\166\76");
    }
    public static function send_support_query($qW, $iF, $Qa, $cf)
    {
        $Bb = new MiniorangeSamlSupport($qW, $iF, $Qa, $cf);
        $EC = $Bb->sendSupportQuery();
        if ($EC) {
            goto LP;
        }
        return false;
        goto qG;
        LP:
        return true;
        qG:
    }
    public static function getClassNameForImport_Export()
    {
        $QG = array("\111\144\145\x6e\x74\151\x74\x79\137\120\x72\x6f\x76\151\x64\x65\x72" => "\155\157\x5f\x6f\160\164\151\x6f\x6e\x73\x5f\x65\x6e\165\155\137\151\x64\x65\156\x74\151\164\171\x5f\x70\x72\157\166\x69\144\x65\162", "\x53\145\162\x76\x69\143\145\137\x50\x72\157\x76\151\x64\x65\x72" => "\155\157\x5f\x6f\x70\x74\x69\157\156\x73\x5f\x65\156\165\155\x5f\163\x65\x72\166\x69\143\x65\x5f\160\x72\157\166\151\144\145\x72", "\123\x69\147\156\151\x6e\137\123\145\x74\x74\x69\x6e\147\163" => "\155\157\x5f\x6f\x70\164\x69\x6f\156\x73\137\145\156\165\155\137\163\x69\x67\156\x69\x6e\x5f\x73\x65\x74\x74\151\x6e\x67\x73", "\x4d\x61\x70\x70\151\x6e\x67" => "\x6d\x6f\x5f\157\x70\164\x69\157\156\163\x5f\x65\x6e\165\155\137\x6d\141\160\x70\x69\x6e\147", "\x43\x75\163\164\157\155\x5f\103\145\x72\x74\x69\x66\x69\x63\141\164\x65" => "\155\157\x5f\x6f\x70\164\151\x6f\x6e\x5f\x65\x6e\165\155\137\143\165\x73\164\x6f\155\137\x63\145\x72\x74\151\146\151\x63\x61\x74\x65");
        return $QG;
    }
    public static function getVariableArrayForImport_Export($p8)
    {
        if ($p8 == "\x6d\x6f\137\x6f\x70\x74\151\157\x6e\163\137\x65\156\165\155\137\151\144\x65\156\164\x69\x74\x79\137\160\x72\157\166\151\144\145\162") {
            goto ko;
        }
        if ($p8 == "\x6d\157\x5f\x6f\x70\164\x69\157\x6e\x73\x5f\x65\156\165\x6d\x5f\163\145\x72\166\x69\x63\x65\137\160\162\157\x76\151\144\145\x72") {
            goto AA;
        }
        if ($p8 == "\155\x6f\137\157\160\164\x69\x6f\x6e\x73\x5f\145\x6e\165\x6d\137\163\x69\147\x6e\x69\x6e\137\163\x65\x74\164\151\x6e\147\x73") {
            goto RK;
        }
        if ($p8 == "\x6d\x6f\x5f\x6f\x70\164\151\x6f\156\x73\137\145\156\x75\x6d\x5f\155\141\x70\160\x69\156\147") {
            goto SH;
        }
        if (!($p8 == "\155\x6f\x5f\x6f\x70\164\x69\x6f\x6e\x5f\x65\156\165\x6d\137\143\x75\x73\164\x6f\x6d\x5f\x63\x65\162\x74\151\146\151\x63\141\164\145")) {
            goto w4;
        }
        $v6 = array("\x43\x75\x73\x74\157\x6d\137\160\162\x69\x76\141\x74\x65\137\x63\x65\x72\x74\151\146\151\x63\141\x74\145" => "\155\151\x6e\x69\157\x72\x61\x6e\x67\x65\x5f\x73\141\x6d\x6c\137\160\162\x69\166\x61\x74\x65\137\143\145\162\x74\151\146\151\143\141\164\x65", "\103\165\163\x74\x6f\155\137\x70\x75\x62\x6c\151\x63\x5f\x63\x65\x72\164\151\146\151\x63\x61\164\145" => "\x6d\151\x6e\x69\157\x72\141\x6e\147\145\137\x73\x61\x6d\x6c\137\160\165\142\x6c\x5f\143\145\162\x74\x69\x66\x69\x63\x61\164\x65");
        w4:
        goto q0;
        SH:
        $v6 = array("\x43\x72\145\x61\x74\x65\137\x72\x65\x67\x69\x73\164\x65\162\x5f\141\x63\143\157\x75\x6e\164\137\x62\171" => "\155\x69\x6e\151\x6f\x72\x61\x6e\x67\145\x5f\x73\141\155\x6c\x5f\x6c\157\x67\x69\156\137\142\x79", "\125\163\145\162\x6e\x61\155\x65\137\x61\164\x74\x72\151\142\165\x74\x65" => "\155\x69\x6e\x69\x6f\162\x61\156\147\x65\x5f\163\141\155\x6c\x5f\x75\163\x65\162\x6e\x61\155\x65\x5f\x61\x74\x74\162\151\x62\165\x74\x65", "\105\x6d\141\x69\x6c\x5f\141\x61\x74\x72\151\x62\165\x74\145" => "\x6d\x69\156\x69\x6f\162\x61\x6e\147\x65\137\x73\141\x6d\154\137\145\x6d\141\151\154\x5f\x61\164\x74\x72\x69\x62\165\164\x65", "\122\157\154\145" => "\155\x69\x6e\151\157\162\x61\156\147\x65\137\163\x61\155\x6c\137\162\x6f\154\145\137\x61\164\164\162\x5f\x6e\x61\155\145", "\x45\156\141\x62\154\x65\137\x52\x6f\x6c\x65\137\x6d\x61\x61\x70\x69\x6e\147" => "\155\151\x6e\x69\157\x72\x61\x6e\x67\145\137\x73\141\x6d\x6c\x5f\x65\156\141\x62\x6c\145\x5f\162\157\x6c\x65\155\141\x70\x70\151\156\x67", "\x44\x6f\156\164\137\x75\x70\x64\x61\x74\x65\137\x75\163\x65\x72\x5f\162\x6f\x6c\145\x73" => "\155\151\x6e\151\x6f\x72\141\x6e\147\x65\137\163\x61\x6d\x6c\x5f\144\x69\163\141\x62\x6c\145\137\x72\x6f\154\145\137\x75\160\144\x61\x74\x65", "\x52\x6f\154\x65\x5f\x53\145\x70\x61\x72\x61\164\157\162" => "\155\151\156\151\157\162\x61\156\147\x65\x5f\163\141\155\154\137\162\x6f\x6c\145\137\141\x74\x74\162\137\x73\x65\160\x61\162\x61\164\157\x72", "\x44\x65\146\x61\165\154\x74\137\x67\x72\157\165\x70\137\146\x6f\x72\x5f\x6e\145\167\x5f\x75\163\145\162\x73" => "\155\151\x6e\x69\x6f\162\x61\156\147\145\137\x73\x61\155\x6c\x5f\144\145\146\141\x75\154\x74\137\162\157\154\145", "\x61\x74\x74\x72\137\x6d\141\x70" => "\x6d\x69\x6e\x69\157\162\x61\156\x67\145\x5f\x73\x61\x6d\x6c\137\143\x75\x73\164\x6f\x6d\137\141\164\164\162\x73\137\x6d\x61\160\137\141\162\x72", "\x72\157\x6c\145\137\x6d\141\x70" => "\155\151\x6e\151\x6f\162\141\x6e\x67\145\x5f\163\x61\x6d\154\137\162\157\154\x65\137\x6d\141\x70\160\x69\x6e\x67\x5f\141\x72\x72");
        q0:
        goto r_;
        RK:
        $v6 = array("\x41\165\x74\x6f\137\143\x74\x65\x61\164\x69\157\156\137\165\x73\x65\162" => "\155\x69\x6e\x69\x6f\162\141\156\147\x65\137\x73\x61\x6d\154\137\144\x69\163\141\142\x6c\x65\x5f\141\x75\x74\157\x63\162\145\141\x74\x65\137\x75\x73\145\x72\x73", "\120\x72\157\x74\145\143\164\x5f\x77\150\157\x6c\x65\x5f\x73\151\164\145" => "\x6d\x69\x6e\x69\x6f\x72\x61\156\147\145\x5f\163\141\x6d\154\x5f\x66\x6f\x72\x63\145\x5f\x61\x75\x74\x68", "\101\x75\164\x6f\137\x72\x65\144\x69\162\x65\143\164" => "\155\x69\156\x69\157\162\141\x6e\147\145\137\163\141\155\154\x5f\141\165\x74\x6f\x5f\162\145\144\151\162\145\143\x74\x5f\x74\x6f\137\151\144\160", "\102\x61\x63\153\x64\157\157\162\x5f\x4c\157\147\x69\x6e" => "\155\x69\156\151\157\x72\x61\156\147\x65\137\x73\141\x6d\x6c\x5f\145\x6e\x61\x62\x6c\145\137\142\141\x63\153\x64\157\157\x72", "\x44\x65\146\x61\x75\154\x74\137\x72\x65\x64\x69\162\145\x63\x74\x5f\125\122\x4c" => "\155\x69\156\x69\x6f\162\x61\x6e\x67\x65\137\163\141\155\x6c\137\x64\145\x66\x61\165\x6c\x74\x5f\x72\145\154\x61\171\163\x74\141\164\x65");
        r_:
        goto Ra;
        AA:
        $v6 = array("\111\144\145\x6e\164\x69\164\171\x5f\x6e\141\x6d\x65" => "\x6d\x69\156\151\157\162\141\156\x67\145\x5f\x73\x61\155\x6c\137\151\144\160\137\156\141\155\x65", "\111\x73\x73\x75\x65\162" => "\x6d\151\x6e\x69\157\162\141\x6e\147\145\137\x73\x61\155\x6c\x5f\151\144\x70\137\x69\x73\x73\x75\145\162", "\x4e\x61\155\145\x5f\x49\x44\137\x66\x6f\x72\155\141\x74" => "\155\x69\156\x69\157\162\x61\x6e\147\x65\137\x73\x61\x6d\x6c\x5f\x6e\141\155\x65\151\x64\137\146\157\162\x6d\141\x74", "\150\x74\164\x70\137\x62\x69\156\144\151\156\x67" => "\155\x69\156\151\x6f\x72\x61\x6e\x67\x65\x5f\163\x61\x6d\154\137\150\x74\x74\160\137\x62\151\x6e\144\x69\156\147", "\x4c\x6f\147\x69\156\137\x55\x52\114" => "\155\151\x6e\151\x6f\x72\x61\156\147\145\x5f\x73\141\x6d\154\137\x69\144\160\x5f\154\x6f\x67\x69\x6e\137\165\x72\154", "\114\157\x67\157\x75\x74\x5f\x55\122\x4c" => "\x6d\151\x6e\151\x6f\162\x61\x6e\x67\x65\137\x73\x61\x6d\154\x5f\151\144\160\137\154\157\147\157\x75\x74\x5f\165\x72\154", "\130\x35\60\71\137\143\145\162\x74\151\x66\x69\x63\141\164\145" => "\155\151\156\151\157\x72\x61\x6e\147\x65\x5f\163\x61\x6d\154\x5f\x69\144\x70\x5f\143\x65\x72\x74\x69\x66\x69\143\x61\x74\x65", "\123\x69\147\156\x5f\162\145\x71\165\x65\x73\x74" => "\155\151\156\x69\x6f\162\x61\x6e\x67\145\x5f\163\141\x6d\x6c\x5f\162\145\161\x75\145\163\x74\137\163\151\x67\x6e\x65\144", "\x45\156\141\x62\x6c\x65\x5f\154\x6f\x67\151\x6e\x5f\167\151\164\150\x5f\x53\x41\115\x4c" => "\x6d\151\x6e\151\x6f\162\x61\x6e\x67\145\137\x73\141\155\154\x5f\x65\x6e\141\x62\x6c\145\137\154\x6f\147\x69\156");
        Ra:
        goto mV;
        ko:
        $v6 = array("\x53\120\137\x42\x61\163\x65\x5f\x55\x72\x6c" => "\155\x69\x6e\151\x6f\162\141\156\147\145\137\x73\141\155\154\137\142\141\163\145", "\x53\120\137\105\x6e\164\151\x74\171\137\111\x44" => "\155\x69\156\151\x6f\x72\141\156\x67\145\x5f\x73\x61\155\x6c\x5f\145\156\x74\151\164\171\x5f\x69\x64");
        mV:
        return $v6;
    }
    public static function isCurlInstalled()
    {
        if (in_array("\x63\165\x72\x6c", get_loaded_extensions())) {
            goto zX;
        }
        return 0;
        goto Mb;
        zX:
        return 1;
        Mb:
    }
    public static function generateID()
    {
        return "\137" . self::stringToHex(self::generateRandomBytes(21));
    }
    public static function stringToHex($nK)
    {
        $Tn = '';
        $Yu = 0;
        q1:
        if (!($Yu < strlen($nK))) {
            goto GH;
        }
        $Tn .= sprintf("\45\x30\x32\x78", ord($nK[$Yu]));
        KN:
        $Yu++;
        goto q1;
        GH:
        return $Tn;
    }
    public static function generateRandomBytes($JM, $c1 = TRUE)
    {
        return openssl_random_pseudo_bytes($JM);
    }
    public static function insertSignature(XMLSecurityKey $C2, array $NN, DOMElement $x1 = NULL, DOMNode $P8 = NULL)
    {
        $rT = new XMLSecurityDSig();
        $rT->setCanonicalMethod(XMLSecurityDSig::EXC_C14N);
        switch ($C2->type) {
            case XMLSecurityKey::RSA_SHA256:
                $tK = XMLSecurityDSig::SHA256;
                goto BG;
            case XMLSecurityKey::RSA_SHA384:
                $tK = XMLSecurityDSig::SHA384;
                goto BG;
            case XMLSecurityKey::RSA_SHA512:
                $tK = XMLSecurityDSig::SHA512;
                goto BG;
            default:
                $tK = XMLSecurityDSig::SHA1;
        }
        kA:
        BG:
        $rT->addReferenceList(array($x1), $tK, array("\x68\x74\x74\x70\x3a\57\57\167\167\x77\x2e\167\x33\x2e\157\162\x67\x2f\62\60\60\60\57\x30\71\57\170\155\x6c\x64\x73\x69\x67\x23\145\x6e\166\x65\154\x6f\160\145\x64\55\x73\x69\x67\x6e\141\x74\x75\x72\x65", XMLSecurityDSig::EXC_C14N), array("\x69\144\137\156\x61\x6d\145" => "\111\104", "\157\x76\x65\162\x77\162\151\164\x65" => FALSE));
        $rT->sign($C2);
        foreach ($NN as $VZ) {
            $rT->add509Cert($VZ, TRUE);
            TX:
        }
        n6:
        $rT->insertSignature($x1, $P8);
    }
    public static function postSAMLRequest($GM, $UQ, $f5, $uZ = false)
    {
        $ev = \Drupal::config("\x6d\x69\156\151\157\162\x61\156\147\145\137\x73\141\x6d\x6c\x2e\x73\x65\164\x74\x69\156\147\x73")->get("\x6d\151\x6e\151\x6f\162\141\156\x67\x65\137\163\141\155\154\137\163\x65\156\144\x5f\163\x6c\157\x5f\151\x6e\x5f\151\146\162\141\x6d\145");
        $bS = $ev ? "\x74\141\x72\147\145\164\75\x27\163\154\x6f\x5f\160\x6f\163\164\x5f\151\146\162\141\x6d\145\x27" : '';
        $KR = "\x3c\151\x66\x72\x61\155\145\40\x6e\x61\155\x65\x3d\x27\x73\154\157\137\160\x6f\x73\164\x5f\x69\x66\x72\141\x6d\x65\47\40\163\x72\x63\x3d\x27" . xss::filter($GM) . "\47\x20\163\164\171\x6c\145\x3d\x27\x70\157\163\151\x74\151\157\x6e\72\40\141\x62\x73\157\154\x75\x74\145\x3b\x20\150\145\x69\147\x68\164\72\40\x30\73\x20\167\151\144\x74\150\x3a\x20\x30\73\40\142\x6f\162\x64\145\162\72\40\60\73\x27\x20\76\x3c\57\151\146\162\x61\155\x65\x3e";
        $qu = $uZ == FALSE ? "\x53\x41\x4d\114\x52\145\x71\x75\x65\x73\164" : "\x53\x41\115\x4c\122\145\x73\x70\157\x6e\163\x65";
        echo "\74\x68\x74\x6d\x6c\x3e\74\x68\145\141\144\76\12\x20\x20\40\40\x20\x20\x20\x20\x20\x20\40\x20\x20\x20\40\40\x20\40\x20\40\74\x73\x63\162\x69\160\x74\x20\164\171\x70\x65\x3d\42\164\145\x78\x74\x2f\152\x61\166\x61\163\143\162\x69\160\164\42\x3e\x24\50\146\165\156\x63\x74\x69\x6f\156\50\x29\x7b\x64\x6f\143\165\x6d\145\156\164\56\x66\x6f\162\x6d\163\133\x27\x73\x61\155\154\x2d\x72\x65\x71\x75\x65\163\164\x2d\x66\x6f\x72\x6d\47\135\x2e\x73\165\x62\155\x69\x74\x28\x29\73\175\51\73\74\57\163\143\162\151\x70\164\x3e\12\40\x20\x20\40\x20\40\40\x20\x20\x20\40\40\40\40\40\40\x20\x3c\57\x68\145\x61\x64\76\xa\40\x20\40\x20\x20\x20\40\x20\40\x20\40\40\x20\40\40\40\40\x3c\x62\157\144\x79\76\120\154\145\x61\163\145\40\x77\141\x69\x74\56\x2e\56\x3c\146\x6f\162\155\x20\141\x63\x74\x69\157\156\75\x22" . xss::filter($GM) . "\42\40" . $bS . "\40\155\145\x74\x68\157\144\75\x22\x70\157\x73\x74\42\x20\x69\144\75\42\x73\141\155\154\55\162\x65\161\165\145\x73\164\x2d\x66\x6f\162\155\x22\76\xa\40\x20\40\x20\x20\x20\x20\x20\40\40\40\x20\40\x20\x20\x20\40\x20\40\40\x3c\151\x6e\x70\165\x74\40\164\x79\x70\x65\75\42\150\151\144\x64\x65\156\42\40\x6e\141\155\x65\x3d\42" . xss::filter($qu) . "\42\x20\x76\x61\x6c\x75\x65\75\42" . xss::filter($UQ) . "\x22\40\x2f\76\xa\40\x20\x20\40\40\40\40\40\40\40\40\40\40\40\x20\x20\x20\40\40\x20\x3c\151\156\x70\165\x74\40\164\171\x70\145\75\42\x68\x69\144\x64\x65\156\x22\x20\156\141\155\x65\75\x22\x52\145\154\x61\x79\x53\164\x61\x74\145\42\x20\166\x61\154\165\x65\x3d\x22" . xss::filter(htmlentities($f5)) . "\42\x20\57\x3e\x3c\57\146\x6f\162\155\76\xa\40\40\40\x20\x20\40\40\x20\40\40\x20\40\40\40\x20\40\40\x20\40\x20" . $KR . "\12\x9\x9\11\x9\x9\74\x73\143\162\151\160\164\x3e\144\157\x63\165\155\145\156\164\x2e\147\x65\x74\x45\x6c\145\155\145\x6e\164\x42\x79\x49\x64\50\47\163\141\x6d\154\x2d\x72\x65\161\x75\145\x73\164\55\x66\157\162\x6d\47\x29\x2e\x73\x75\x62\x6d\x69\x74\x28\x29\x3b\x3c\57\x73\143\162\151\x70\x74\x3e\xa\40\40\x20\40\40\x20\40\x20\x20\x20\40\40\40\x20\40\x20\40\74\57\x62\x6f\144\x79\76\xa\x20\40\x20\40\40\x20\40\40\40\x20\x20\x20\x20\x20\x3c\57\x68\x74\x6d\154\76";
    }
    public static function createAuthnRequest($cR, $fl, $Kh, $yE, $uA, $sz = "\x66\x61\154\163\145")
    {
        $Wz = "\x3c\x3f\x78\155\154\x20\x76\145\162\x73\151\157\x6e\x3d\x22\61\x2e\x30\x22\40\x65\156\143\x6f\x64\x69\x6e\x67\75\42\x55\124\x46\x2d\70\x22\77\76" . "\74\163\x61\155\154\160\72\101\x75\164\150\x6e\x52\x65\161\165\x65\163\x74\x20\170\x6d\x6c\156\x73\x3a\x73\x61\x6d\x6c\x70\75\42\x75\x72\x6e\72\157\141\x73\151\163\x3a\156\141\x6d\x65\163\72\164\x63\x3a\x53\x41\115\x4c\x3a\x32\56\x30\72\x70\x72\x6f\164\x6f\143\157\x6c\x22\40\x49\104\x3d\42" . self::generateID() . "\x22\40\x56\x65\162\x73\151\x6f\x6e\75\x22\x32\56\60\42\40\x49\163\x73\165\145\x49\156\x73\164\141\x6e\x74\75\x22" . self::generateTimestamp() . "\42";
        if (!($sz == "\x74\x72\x75\145")) {
            goto Zy;
        }
        $Wz .= "\x20\106\157\x72\x63\x65\101\165\164\x68\x6e\x3d\x22\164\162\x75\145\42";
        Zy:
        $Wz .= "\40\x50\x72\157\164\x6f\x63\157\154\102\151\x6e\x64\x69\x6e\147\75\x22\x75\162\156\72\x6f\x61\x73\151\163\x3a\156\x61\155\145\x73\72\x74\143\x3a\x53\x41\x4d\x4c\x3a\62\x2e\x30\x3a\x62\x69\x6e\144\151\x6e\147\163\72\110\124\x54\x50\x2d\120\117\x53\124\x22\40\101\x73\163\x65\x72\x74\151\x6f\156\103\x6f\x6e\x73\x75\x6d\x65\162\123\x65\162\x76\151\143\145\x55\x52\x4c\x3d\x22" . $cR . "\x22\40\104\145\163\x74\151\x6e\141\x74\151\157\x6e\x3d\x22" . $yE . "\x22\x3e\x3c\x73\141\x6d\x6c\72\111\x73\163\165\145\x72\40\x78\x6d\154\x6e\x73\72\x73\141\155\154\x3d\x22\x75\x72\156\x3a\x6f\141\x73\151\x73\x3a\156\141\155\x65\x73\72\164\x63\72\x53\101\115\x4c\72\62\56\60\x3a\141\163\163\145\162\164\x69\157\156\x22\x3e" . $fl . "\74\x2f\163\141\155\x6c\72\111\163\x73\165\145\162\76\12\x9\x9\x9\x9\11\11\x3c\163\x61\155\154\160\72\116\x61\x6d\145\111\104\x50\157\x6c\x69\x63\171\x20\101\x6c\154\x6f\167\103\162\145\141\x74\145\x3d\42\x74\x72\x75\145\x22\40\106\x6f\162\155\141\x74\x3d\x22" . $Kh . "\x22\x2f\76\x3c\x2f\163\141\155\154\160\72\x41\x75\x74\150\156\x52\x65\161\x75\145\163\x74\x3e";
        if (!(empty($uA) || $uA == "\x48\124\x54\x50\55\122\145\x64\151\162\x65\143\x74")) {
            goto Bd;
        }
        $Ia = gzdeflate($Wz);
        $bg = base64_encode($Ia);
        $It = urlencode($bg);
        $Wz = $It;
        Bd:
        return $Wz;
    }
    public static function signXML($A3, $Zh, $r4, $xa, $Z6 = '')
    {
        $V4 = array("\x74\171\x70\145" => "\x70\162\x69\x76\141\164\x65");
        $C2 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA256, $V4);
        if ($xa == "\122\x53\101\137\x53\110\101\x33\70\64") {
            goto u9;
        }
        if ($xa == "\x52\123\x41\137\x53\110\101\65\x31\62") {
            goto rF;
        }
        if ($xa == "\x52\x53\101\137\x53\x48\x41\61") {
            goto Cn;
        }
        goto jg;
        u9:
        $C2 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA384, $V4);
        goto jg;
        rF:
        $C2 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA512, $V4);
        goto jg;
        Cn:
        $C2 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, $V4);
        jg:
        $C2->loadKey($r4, FALSE);
        $PP = new DOMDocument();
        $PP->loadXML($A3);
        $Dh = $PP->firstChild;
        if (!empty($Z6)) {
            goto yu;
        }
        self::insertSignature($C2, array($Zh), $Dh);
        goto KU;
        yu:
        $JY = $PP->getElementsByTagName($Z6)->item(0);
        self::insertSignature($C2, array($Zh), $Dh, $JY);
        KU:
        $Vz = $Dh->ownerDocument->saveXML($Dh);
        $Cn = base64_encode($Vz);
        return $Cn;
    }
    public static function createLogoutRequest($bu, $fl, $yE, $yu, $q5 = '')
    {
        $Wz = "\74\x3f\170\x6d\154\x20\x76\x65\x72\163\151\x6f\x6e\75\x22\61\56\60\x22\x20\x65\x6e\143\157\144\151\156\x67\x3d\x22\x55\x54\106\x2d\70\x22\x3f\x3e" . "\74\x73\x61\155\x6c\x70\72\114\157\147\157\x75\x74\x52\145\161\x75\145\x73\164\40\170\155\x6c\x6e\163\x3a\x73\141\155\154\x70\75\x22\165\x72\156\x3a\x6f\x61\x73\151\x73\72\x6e\x61\x6d\145\x73\x3a\164\x63\x3a\123\101\115\x4c\x3a\x32\x2e\60\x3a\160\162\x6f\164\157\x63\x6f\154\x22\40\x78\x6d\154\x6e\x73\72\163\x61\x6d\x6c\x3d\x22\x75\x72\156\x3a\157\141\163\151\x73\72\x6e\x61\x6d\145\x73\72\x74\x63\72\x53\101\x4d\x4c\x3a\62\56\x30\72\x61\163\163\145\x72\x74\151\x6f\156\42\x20\111\x44\75\x22" . self::generateID() . "\42\40\x49\x73\163\165\x65\111\x6e\163\164\x61\156\164\x3d\x22" . self::generateTimestamp() . "\42\x20\x56\145\x72\x73\x69\x6f\x6e\x3d\42\62\x2e\x30\42\40\104\145\x73\x74\x69\x6e\141\164\x69\x6f\x6e\x3d\x22" . $yE . "\42\x3e\xa\11\11\11\x9\x9\x9\74\163\x61\155\x6c\72\x49\163\163\165\145\x72\x20\170\155\154\156\163\x3a\163\141\155\x6c\75\x22\x75\x72\156\x3a\x6f\x61\x73\151\163\72\x6e\x61\155\145\163\72\x74\x63\72\123\101\115\114\72\x32\x2e\60\72\141\163\163\x65\162\164\151\x6f\156\x22\x3e" . $fl . "\x3c\x2f\163\141\x6d\x6c\72\111\x73\x73\165\x65\x72\76\12\x9\x9\11\11\x9\11\74\163\x61\x6d\154\x3a\116\x61\x6d\x65\x49\104\x20\170\x6d\x6c\156\163\x3a\163\x61\155\154\75\x22\165\x72\156\72\x6f\x61\x73\151\163\x3a\x6e\141\155\145\163\x3a\164\x63\x3a\123\101\115\114\72\62\56\x30\x3a\x61\x73\163\145\x72\164\151\x6f\156\x22\76" . $bu . "\74\57\163\141\155\154\72\116\141\155\x65\111\104\x3e";
        if (empty($q5)) {
            goto fV;
        }
        $Wz .= "\74\163\x61\x6d\154\x70\x3a\123\145\163\x73\x69\157\x6e\x49\156\x64\x65\x78\76" . $q5 . "\74\57\163\x61\x6d\x6c\160\72\123\x65\163\x73\151\157\156\111\156\x64\145\x78\x3e";
        fV:
        $Wz .= "\x3c\x2f\x73\x61\155\154\160\x3a\114\157\x67\157\165\x74\x52\145\161\165\x65\x73\x74\x3e";
        if (!(empty($yu) || $yu == "\x48\124\124\120\55\x52\145\x64\x69\x72\145\143\x74")) {
            goto Y_;
        }
        $Ia = gzdeflate($Wz);
        $bg = base64_encode($Ia);
        $It = urlencode($bg);
        $Wz = $It;
        Y_:
        return $Wz;
    }
    public static function generateTimestamp($XP = NULL)
    {
        if (!($XP === NULL)) {
            goto Y7;
        }
        $XP = time();
        Y7:
        return gmdate("\131\x2d\x6d\x2d\x64\x5c\124\110\x3a\151\x3a\163\134\132", $XP);
    }
    public static function xpQuery(DOMNode $au, $Qa)
    {
        static $Bs = NULL;
        if ($au instanceof DOMDocument) {
            goto xw;
        }
        $cj = $au->ownerDocument;
        goto Oh;
        xw:
        $cj = $au;
        Oh:
        if (!($Bs === NULL || !$Bs->document->isSameNode($cj))) {
            goto rK;
        }
        $Bs = new DOMXPath($cj);
        $Bs->registerNamespace("\163\157\141\x70\55\x65\x6e\166", "\x68\164\x74\x70\x3a\x2f\x2f\x73\x63\x68\145\155\141\x73\x2e\x78\155\x6c\x73\157\x61\160\x2e\157\x72\147\57\x73\157\141\160\57\145\x6e\x76\x65\x6c\157\160\145\57");
        $Bs->registerNamespace("\x73\141\155\154\x5f\160\162\157\164\157\143\x6f\x6c", "\x75\x72\x6e\x3a\x6f\x61\163\151\x73\x3a\x6e\141\x6d\x65\163\72\164\143\72\x53\x41\x4d\114\72\x32\56\x30\x3a\160\x72\157\x74\x6f\x63\x6f\x6c");
        $Bs->registerNamespace("\163\x61\x6d\154\137\x61\163\x73\145\x72\164\x69\x6f\156", "\x75\x72\156\72\x6f\x61\163\x69\163\72\156\141\x6d\145\163\x3a\x74\x63\72\x53\101\x4d\114\72\62\56\x30\72\141\x73\163\145\162\164\x69\157\x6e");
        $Bs->registerNamespace("\x73\x61\155\x6c\x5f\155\145\x74\x61\144\141\164\x61", "\x75\x72\x6e\x3a\x6f\141\x73\x69\x73\x3a\x6e\x61\x6d\x65\x73\72\x74\x63\72\x53\101\x4d\114\x3a\62\x2e\x30\x3a\155\x65\164\x61\x64\x61\164\141");
        $Bs->registerNamespace("\144\x73", "\x68\164\164\x70\72\x2f\57\x77\x77\167\56\x77\x33\x2e\157\162\x67\x2f\x32\60\x30\60\57\60\71\57\x78\155\x6c\144\163\x69\147\43");
        $Bs->registerNamespace("\x78\x65\156\x63", "\x68\x74\x74\160\x3a\57\57\167\167\167\56\167\x33\56\157\162\147\57\x32\60\x30\61\57\60\64\x2f\170\155\154\145\x6e\x63\x23");
        rK:
        $WA = $Bs->query($Qa, $au);
        $Tn = array();
        $Yu = 0;
        JR:
        if (!($Yu < $WA->length)) {
            goto O4;
        }
        $Tn[$Yu] = $WA->item($Yu);
        RR:
        $Yu++;
        goto JR;
        O4:
        return $Tn;
    }
    public static function parseNameId(DOMElement $A3)
    {
        $Tn = array("\x56\x61\154\165\145" => trim($A3->textContent));
        foreach (array("\x4e\141\155\145\x51\x75\x61\154\151\x66\151\145\162", "\x53\x50\x4e\x61\155\x65\x51\x75\141\x6c\x69\x66\x69\x65\x72", "\106\x6f\162\x6d\141\x74") as $VS) {
            if (!$A3->hasAttribute($VS)) {
                goto tk;
            }
            $Tn[$VS] = $A3->getAttribute($VS);
            tk:
            QA:
        }
        z4:
        return $Tn;
    }
    public static function xsDateTimeToTimestamp($pR)
    {
        $MT = array();
        $O3 = "\57\x5e\x28\134\x64\x5c\144\x5c\x64\134\144\51\55\x28\x5c\x64\x5c\x64\x29\x2d\50\x5c\x64\x5c\x64\51\124\50\134\x64\x5c\144\x29\72\50\x5c\144\x5c\144\51\x3a\50\134\x64\134\x64\x29\50\x3f\72\134\56\x5c\144\53\51\77\x5a\x24\x2f\104";
        if (!(preg_match($O3, $pR, $MT) == 0)) {
            goto Z4;
        }
        echo sprintf("\156\166\x61\x6c\151\144\40\123\101\115\114\62\40\x74\151\x6d\145\x73\164\141\155\x70\x20\x70\x61\x73\163\145\x64\40\164\x6f\x20\x78\x73\104\x61\164\145\x54\151\x6d\x65\x54\157\x54\x69\155\145\x73\x74\141\x6d\160\72\x20" . xss::filter($pR));
        exit;
        Z4:
        $nd = intval($MT[1]);
        $DP = intval($MT[2]);
        $NA = intval($MT[3]);
        $Z0 = intval($MT[4]);
        $RF = intval($MT[5]);
        $hh = intval($MT[6]);
        $nE = gmmktime($Z0, $RF, $hh, $DP, $NA, $nd);
        return $nE;
    }
    public static function extractStrings(DOMElement $qt, $kg, $is)
    {
        $Tn = array();
        $au = $qt->firstChild;
        Yv:
        if (!($au !== NULL)) {
            goto pq;
        }
        if (!($au->namespaceURI !== $kg || $au->localName !== $is)) {
            goto G0;
        }
        goto EG;
        G0:
        $Tn[] = trim($au->textContent);
        EG:
        $au = $au->nextSibling;
        goto Yv;
        pq:
        return $Tn;
    }
    public static function validateElement(DOMElement $x1)
    {
        $rT = new XMLSecurityDSig();
        $rT->idKeys[] = "\111\x44";
        $oH = self::xpQuery($x1, "\56\x2f\x64\163\x3a\123\x69\147\x6e\141\164\165\x72\145");
        if (count($oH) === 0) {
            goto ZL;
        }
        if (count($oH) > 1) {
            goto KO;
        }
        goto Nr;
        ZL:
        return FALSE;
        goto Nr;
        KO:
        echo sprintf("\130\115\x4c\x53\145\143\x3a\40\x6d\x6f\x72\x65\x20\164\x68\x61\156\40\157\156\145\40\163\x69\x67\x6e\x61\164\165\162\x65\40\145\154\145\x6d\145\156\x74\x20\151\x6e\x20\x72\x6f\157\x74\x2e");
        exit;
        Nr:
        $oH = $oH[0];
        $rT->sigNode = $oH;
        $rT->canonicalizeSignedInfo();
        if ($rT->validateReference()) {
            goto ZE;
        }
        echo sprintf("\130\x4d\x4c\x73\x65\x63\x3a\x20\x64\151\x67\x65\x73\x74\x20\x76\x61\154\151\144\x61\x74\151\x6f\156\40\146\141\151\154\x65\144");
        exit;
        ZE:
        $XA = FALSE;
        foreach ($rT->getValidatedNodes() as $BA) {
            if ($BA->isSameNode($x1)) {
                goto du;
            }
            if ($x1->parentNode instanceof DOMElement && $BA->isSameNode($x1->ownerDocument)) {
                goto Hq;
            }
            goto UN;
            du:
            $XA = TRUE;
            goto Od;
            goto UN;
            Hq:
            $XA = TRUE;
            goto Od;
            UN:
            hQ:
        }
        Od:
        if ($XA) {
            goto bb;
        }
        echo sprintf("\130\115\x4c\x53\145\143\72\40\x54\x68\145\40\x72\157\157\164\x20\x65\x6c\145\155\x65\156\x74\x20\x69\x73\40\x6e\157\x74\40\x73\151\147\x6e\145\x64\56");
        exit;
        bb:
        $NN = array();
        foreach (self::xpQuery($oH, "\x2e\57\x64\163\72\x4b\x65\x79\111\x6e\x66\157\57\144\163\x3a\130\x35\x30\71\104\141\164\141\x2f\x64\x73\x3a\130\65\60\71\103\145\x72\164\151\x66\x69\x63\141\164\145") as $Fj) {
            $Ze = trim($Fj->textContent);
            $Ze = str_replace(array("\xd", "\12", "\11", "\40"), '', $Ze);
            $NN[] = $Ze;
            ee:
        }
        dR:
        $Tn = array("\x53\151\147\x6e\141\x74\x75\162\145" => $rT, "\x43\145\162\x74\x69\146\151\143\141\164\145\x73" => $NN);
        return $Tn;
    }
    public static function validateSignature(array $NY, XMLSecurityKey $C2)
    {
        $rT = $NY["\123\x69\147\156\x61\x74\x75\x72\x65"];
        $QQ = self::xpQuery($rT->sigNode, "\56\57\x64\163\x3a\x53\x69\147\156\x65\x64\x49\x6e\x66\x6f\x2f\144\x73\x3a\123\x69\147\x6e\141\164\165\162\x65\x4d\145\x74\150\x6f\x64");
        if (!empty($QQ)) {
            goto G1;
        }
        echo sprintf("\x4d\151\x73\163\151\x6e\x67\40\123\151\x67\156\x61\164\x75\x72\x65\x4d\x65\164\150\157\144\x20\145\154\x65\x6d\x65\x6e\164");
        exit;
        G1:
        $QQ = $QQ[0];
        if ($QQ->hasAttribute("\101\154\147\x6f\162\x69\164\150\155")) {
            goto jk;
        }
        echo sprintf("\115\151\163\163\x69\156\147\40\x41\x6c\147\x6f\162\x69\x74\150\155\55\141\x74\164\162\x69\x62\x75\x74\x65\40\x6f\156\x20\123\x69\147\x6e\141\x74\165\162\145\x4d\145\x74\x68\157\144\x20\145\x6c\145\155\x65\156\164\56");
        exit;
        jk:
        $F6 = $QQ->getAttribute("\101\x6c\147\157\x72\151\164\150\155");
        if (!($C2->type === XMLSecurityKey::RSA_SHA1 && $F6 !== $C2->type)) {
            goto I6;
        }
        $C2 = self::castKey($C2, $F6);
        I6:
        if ($rT->verify($C2)) {
            goto kf;
        }
        echo sprintf("\125\156\141\x62\x6c\x65\x20\x74\x6f\40\x76\141\x6c\x69\144\x61\164\145\x20\123\x67\156\x61\x74\165\162\145");
        exit;
        kf:
    }
    public static function castKey(XMLSecurityKey $C2, $PF, $tK = "\160\165\142\x6c\x69\x63")
    {
        if (!($C2->type === $PF)) {
            goto dz;
        }
        return $C2;
        dz:
        $cL = openssl_pkey_get_details($C2->key);
        if (!($cL === FALSE)) {
            goto jQ;
        }
        echo sprintf("\x55\156\141\142\x6c\x65\x20\164\157\40\x67\145\x74\40\x6b\x65\x79\40\144\x65\164\x61\151\x6c\x73\x20\146\162\x6f\x6d\x20\x58\x4d\114\123\x65\x63\x75\162\151\x74\x79\x4b\145\171\x2e");
        exit;
        jQ:
        if (isset($cL["\x6b\x65\171"])) {
            goto vK;
        }
        echo sprintf("\x4d\151\x73\x73\151\156\147\x20\153\145\x79\x20\151\156\x20\160\x75\x62\154\x69\143\x20\x6b\145\x79\x20\x64\x65\x74\x61\x69\x6c\x73\56");
        exit;
        vK:
        $aP = new XMLSecurityKey($PF, array("\x74\171\160\145" => $tK));
        $aP->loadKey($cL["\x6b\x65\171"]);
        return $aP;
    }
    public static function processResponse($cR, $se, $pN, SAML2_Response $ld)
    {
        $nf = $pN["\x43\145\x72\164\151\x66\151\x63\141\x74\145\163"][0];
        $FZ = $ld->getDestination();
        if (!($FZ !== NULL && $FZ !== $cR)) {
            goto RF;
        }
        echo sprintf("\104\x65\163\164\151\x6e\x61\x74\151\x6f\x6e\40\151\156\40\162\145\x73\x70\157\156\x73\145\40\144\157\x65\163\156\47\164\40\155\141\164\x63\150\40\x74\x68\x65\40\101\103\123\40\x55\x52\114\56\40\x44\145\x73\164\x69\156\141\164\x69\157\156\x20\151\163\x20\x22" . xss::filter($FZ) . "\42\54\x20\143\165\162\162\145\156\164\40\x55\x52\114\x20\151\x73\x20\42" . xss::filter($cR) . "\42\x2e");
        exit;
        RF:
        $Nu = self::checkSign($se, $pN, $nf);
        return $Nu;
    }
    public static function checkSign($se, $pN, $nf)
    {
        $NN = $pN["\x43\x65\162\164\x69\146\151\143\x61\x74\145\x73"];
        if (count($NN) === 0) {
            goto uZ;
        }
        $gI = self::findCertificate($se, $NN, $nf);
        $nm = NULL;
        goto fJ;
        uZ:
        $J_ = \Drupal::configFactory()->getEditable("\155\x69\x6e\x69\157\x72\141\156\147\x65\137\x73\x61\x6d\x6c\56\163\x65\x74\164\151\x6e\x67\163")->get("\155\151\x6e\151\157\162\x61\156\x67\x65\137\x73\x61\155\x6c\137\151\x64\160\137\x63\145\x72\164\151\x66\x69\143\141\164\145");
        $J_ = unserialize($J_);
        $gI = $J_[0];
        fJ:
        $C2 = new XMLSecurityKey(XMLSecurityKey::RSA_SHA1, array("\164\x79\160\x65" => "\160\x75\x62\154\x69\143"));
        $C2->loadKey($gI);
        try {
            self::validateSignature($pN, $C2);
            return TRUE;
        } catch (Exception $Ep) {
            $nm = $Ep;
        }
        if ($nm !== NULL) {
            goto eA;
        }
        return FALSE;
        goto Qe;
        eA:
        throw $nm;
        Qe:
    }
    private static function findCertificate($c6, $NN, $nf)
    {
        foreach ($NN as $J_) {
            $kL = strtolower(sha1(base64_decode($J_)));
            if (!in_array($kL, $c6, TRUE)) {
                goto MM;
            }
            $Ad = "\55\55\55\x2d\55\x42\105\107\111\116\x20\x43\x45\x52\124\x49\106\x49\x43\x41\x54\105\55\55\x2d\x2d\x2d\12" . chunk_split($J_, 64) . "\x2d\55\x2d\55\x2d\105\x4e\x44\x20\x43\x45\122\x54\111\x46\x49\x43\101\124\x45\x2d\x2d\55\55\x2d\12";
            return $Ad;
            MM:
            t3:
        }
        i_:
        $nf = self::sanitize_certificate($nf);
        if (array_key_exists("\x52\145\154\x61\x79\123\x74\x61\164\145", $_REQUEST) && $_REQUEST["\x52\145\154\x61\x79\123\x74\141\x74\x65"] == "\164\145\x73\164\126\141\154\x69\144\141\164\x65") {
            goto MB;
        }
        echo "\x20\x3c\x64\151\166\40\163\x74\171\154\145\x3d\x22\x63\157\154\x6f\162\x3a\40\x23\x61\71\x34\64\x34\x32\73\146\x6f\x6e\x74\x2d\x73\151\x7a\145\x3a\x31\64\x70\164\73\x20\x6d\141\162\147\x69\156\x2d\x62\157\x74\164\x6f\155\x3a\62\60\160\x78\x3b\42\76\x3c\160\76\74\142\76\105\x72\x72\x6f\162\x3a\40\74\57\x62\76\127\x65\40\143\x6f\x75\154\144\40\156\x6f\164\x20\x73\x69\x67\156\x20\x79\157\165\40\x69\156\x2e\40\120\154\145\141\163\x65\40\x63\157\156\164\141\143\x74\x20\x79\x6f\x75\162\x20\101\144\155\x69\156\x69\163\x74\162\x61\164\x6f\x72\56\x3c\x2f\160\x3e\74\57\144\x69\x76\x3e";
        goto Ll;
        MB:
        echo "\x3c\x64\151\166\40\163\x74\x79\154\x65\x3d\42\x66\x6f\x6e\164\x2d\x66\141\x6d\x69\154\171\72\x43\141\x6c\151\142\162\x69\73\160\x61\x64\x64\x69\x6e\147\72\x30\40\63\45\73\x22\x3e";
        echo "\x3c\x64\151\x76\40\163\164\x79\154\x65\75\x22\x63\157\x6c\x6f\x72\72\40\x23\x61\x39\x34\64\x34\62\x3b\x62\x61\143\x6b\147\x72\x6f\165\156\144\55\143\157\x6c\157\162\x3a\x20\43\x66\62\x64\x65\x64\145\x3b\x70\x61\x64\144\151\x6e\x67\72\40\61\x35\x70\170\73\155\141\162\147\151\x6e\x2d\x62\157\x74\x74\157\x6d\x3a\x20\62\60\x70\x78\73\164\145\x78\x74\55\x61\154\151\147\x6e\72\x63\145\x6e\164\x65\x72\x3b\142\157\x72\x64\145\162\x3a\61\160\170\x20\163\x6f\154\x69\144\40\43\x45\66\102\63\x42\62\x3b\146\x6f\156\164\55\x73\x69\172\x65\72\x31\70\160\164\x3b\42\x3e\40\x45\122\x52\117\x52\74\x2f\144\x69\x76\x3e\12\x9\x9\11\11\x3c\144\151\166\x20\163\x74\171\154\145\x3d\42\143\157\x6c\157\162\x3a\x20\43\x61\x39\x34\64\x34\62\x3b\x66\157\156\x74\x2d\x73\x69\172\145\x3a\61\x34\160\164\73\40\155\x61\x72\147\151\156\55\x62\x6f\164\164\x6f\x6d\x3a\62\x30\x70\x78\73\42\x3e\x3c\160\x3e\x3c\163\x74\162\x6f\156\147\76\105\162\162\x6f\x72\x3a\x20\74\x2f\163\x74\162\157\156\x67\76\125\x6e\x61\x62\154\145\40\x74\157\x20\146\151\156\144\40\x61\40\143\145\x72\x74\x69\x66\151\143\x61\164\145\40\x6d\x61\x74\143\x68\151\156\x67\x20\x74\150\x65\40\x63\x6f\156\x66\151\x67\165\x72\145\x64\x20\146\x69\156\147\145\x72\160\162\151\156\x74\x2e\x3c\57\x70\76\xa\11\11\11\x9\74\x70\76\74\163\164\162\157\156\147\76\x50\x6f\x73\163\x69\x62\x6c\145\40\x43\141\165\x73\145\72\40\74\x2f\x73\164\162\x6f\156\x67\76\x43\x6f\156\164\145\156\x74\40\x6f\146\x20\x27\130\56\x35\x30\71\x20\x43\145\162\164\151\146\x69\x63\141\x74\x65\47\x20\146\151\145\154\x64\x20\x69\156\x20\x53\145\162\x76\151\x63\145\x20\x50\x72\x6f\166\x69\x64\145\162\40\x53\x65\x74\x74\x69\156\147\163\x20\x69\163\40\x69\156\x63\157\162\x72\x65\143\x74\74\x2f\160\x3e\xa\x9\11\x9\11\74\x70\76\x3c\x62\76\x45\170\x70\x65\143\x74\145\x64\x20\x76\x61\154\165\145\x3a\x3c\x2f\142\x3e" . xss::filter($nf) . "\74\57\160\76";
        echo str_repeat("\46\x6e\142\x73\x70\73", 15);
        echo "\74\x2f\144\x69\166\76\xa\x9\x9\x9\x9\74\x64\x69\166\x20\163\x74\171\x6c\145\x3d\42\155\x61\x72\147\151\x6e\72\63\x25\73\x64\151\x73\x70\x6c\141\x79\72\142\x6c\x6f\x63\153\x3b\164\145\170\164\x2d\x61\154\151\x67\156\72\x63\145\156\164\x65\x72\73\x22\76\xa\x9\x9\11\x9\74\146\157\162\x6d\x20\x61\143\x74\151\x6f\156\75\42\x69\x6e\144\145\x78\x2e\x70\150\160\x22\76\xa\x9\11\x9\x9\74\144\x69\x76\40\x73\x74\x79\x6c\x65\75\42\155\x61\x72\147\151\156\72\x33\45\73\x64\151\163\160\154\x61\171\x3a\142\154\x6f\143\153\73\164\x65\x78\x74\55\x61\154\x69\x67\156\x3a\x63\145\156\x74\145\x72\x3b\x22\x3e\x3c\151\156\x70\x75\164\40\163\x74\171\154\145\75\42\160\x61\144\x64\x69\156\147\x3a\61\45\x3b\167\x69\x64\x74\x68\72\61\x30\x30\x70\170\73\x62\x61\x63\153\147\162\x6f\165\x6e\x64\72\40\43\60\x30\x39\61\x43\104\x20\156\157\156\x65\40\x72\x65\160\x65\141\x74\40\163\x63\x72\157\x6c\x6c\x20\60\45\x20\x30\x25\73\x63\x75\162\163\157\x72\72\x20\160\157\x69\x6e\164\145\162\73\146\157\x6e\164\55\163\151\172\145\72\61\65\160\x78\73\142\x6f\x72\x64\145\x72\x2d\167\x69\144\164\x68\x3a\40\61\x70\x78\73\x62\x6f\x72\x64\145\162\x2d\x73\164\x79\x6c\145\72\40\163\x6f\154\x69\x64\73\x62\x6f\162\x64\x65\x72\x2d\162\x61\x64\x69\165\163\x3a\40\63\x70\170\73\167\150\151\164\145\55\163\x70\x61\143\x65\x3a\40\x6e\157\167\x72\141\160\73\142\157\x78\x2d\x73\x69\x7a\x69\156\x67\72\40\142\x6f\x72\x64\x65\162\x2d\x62\157\x78\73\142\x6f\162\144\145\x72\55\143\157\154\x6f\162\x3a\x20\x23\60\60\x37\x33\x41\101\x3b\142\x6f\x78\x2d\163\150\x61\144\157\167\x3a\40\60\160\x78\40\61\x70\170\40\x30\x70\170\40\x72\x67\142\x61\50\61\62\60\x2c\x20\62\60\60\x2c\40\62\x33\x30\x2c\x20\60\56\66\x29\40\x69\156\163\x65\164\x3b\x63\157\154\157\162\72\x20\43\106\x46\106\73\42\x74\171\160\x65\x3d\x22\142\165\x74\164\157\x6e\x22\40\166\141\x6c\165\x65\75\x22\x44\157\156\145\42\x20\157\156\103\154\x69\x63\x6b\x3d\x22\163\x65\x6c\x66\56\x63\154\157\x73\x65\x28\x29\x3b\x22\76\74\57\x64\x69\x76\76";
        Ll:
        exit;
    }
    public static function validateIssuerAndAudience($FG)
    {
        $fl = current($FG->getAssertions())->getIssuer();
        $HF = current(current($FG->getAssertions())->getValidAudiences());
        if (strcmp(self::getIdpIssuer(), $fl) === 0) {
            goto nn;
        }
        if (array_key_exists("\x52\145\x6c\141\171\x53\164\x61\x74\x65", $_REQUEST) && $_REQUEST["\x52\145\154\141\171\123\164\x61\164\x65"] == "\164\x65\x73\164\126\141\x6c\x69\144\x61\x74\x65") {
            goto c0;
        }
        echo "\74\x64\151\166\x20\x73\164\x79\x6c\x65\x3d\x22\143\x6f\154\157\x72\72\x20\x23\x61\71\x34\64\x34\x32\x3b\x66\157\156\x74\55\x73\x69\172\x65\x3a\x31\64\160\164\73\40\x6d\x61\162\147\151\x6e\55\x62\157\x74\164\157\x6d\x3a\x32\60\160\170\x3b\x22\76\x3c\160\76\74\142\76\x45\x72\162\157\x72\x3a\40\74\57\142\x3e\x57\x65\x20\x63\x6f\x75\x6c\x64\x20\x6e\x6f\x74\x20\163\151\147\156\x20\x79\x6f\165\x20\151\x6e\x2e\40\120\x6c\x65\x61\163\145\40\x63\x6f\156\164\141\143\x74\40\x79\157\x75\162\40\x41\x64\x6d\151\156\x69\x73\164\x72\x61\x74\157\x72\x2e\x3c\x2f\x70\76\74\57\144\x69\166\76";
        goto Ug;
        c0:
        echo "\x3c\x64\x69\x76\x20\x73\164\x79\x6c\x65\75\x22\x66\157\x6e\x74\55\146\141\x6d\x69\154\171\72\103\141\154\151\142\x72\151\73\x70\x61\144\x64\151\x6e\x67\x3a\x30\x20\63\x25\73\42\76";
        echo "\x3c\144\x69\166\x20\163\x74\x79\154\145\75\42\143\157\154\157\162\72\40\x23\x61\71\64\x34\64\x32\x3b\x62\141\143\153\x67\x72\x6f\165\156\144\55\143\x6f\x6c\x6f\x72\72\40\43\146\62\x64\x65\144\145\x3b\160\141\144\144\151\x6e\x67\x3a\x20\x31\x35\160\x78\x3b\155\141\x72\147\x69\156\55\142\157\164\x74\157\x6d\72\40\62\x30\x70\170\73\164\145\x78\164\55\141\x6c\151\147\156\72\x63\145\156\x74\145\162\x3b\142\x6f\x72\x64\145\x72\72\x31\x70\170\x20\163\x6f\154\151\144\40\43\x45\66\x42\63\x42\x32\73\146\x6f\x6e\164\x2d\163\151\172\145\x3a\x31\x38\160\x74\73\x22\x3e\x20\105\x52\122\117\122\74\57\144\x69\166\x3e\xa\11\x9\x9\x9\11\74\x64\151\x76\x20\x73\164\x79\154\145\x3d\42\143\157\x6c\x6f\162\72\x20\43\x61\x39\x34\64\64\x32\x3b\146\x6f\x6e\x74\55\163\x69\172\x65\72\x31\64\x70\164\x3b\40\155\141\x72\147\x69\156\x2d\x62\157\164\164\x6f\x6d\72\62\x30\160\170\x3b\x22\x3e\x3c\160\76\x3c\163\x74\162\x6f\156\x67\76\x45\x72\162\x6f\x72\72\x20\74\57\163\x74\x72\157\x6e\x67\x3e\111\x73\x73\x75\145\x72\x20\143\x61\156\156\x6f\x74\40\142\145\x20\166\x65\162\x69\x66\x69\145\144\56\74\57\x70\76\12\x9\x9\x9\11\x9\x3c\x70\76\120\x6c\145\141\x73\x65\x20\143\x6f\x6e\164\141\x63\x74\x20\171\157\x75\x72\40\x61\144\x6d\151\156\x69\x73\x74\162\x61\x74\157\162\40\141\x6e\x64\40\162\145\160\x6f\162\x74\40\164\150\145\x20\x66\x6f\x6c\154\157\167\151\156\x67\x20\145\x72\x72\157\x72\x3a\74\57\160\x3e\12\x9\11\x9\x9\11\74\x70\x3e\74\x73\164\x72\157\156\147\x3e\x50\x6f\x73\163\151\x62\154\x65\40\x43\x61\x75\163\x65\72\40\x3c\x2f\x73\x74\162\157\x6e\147\76\124\x68\x65\x20\166\141\154\165\145\x20\x69\x6e\x20\x27\111\144\x50\40\105\x6e\164\151\164\171\40\x49\104\40\157\x72\x20\111\x73\163\165\145\162\x27\x20\x66\151\x65\x6c\144\x20\x69\156\x20\123\x65\x72\166\151\143\x65\40\120\x72\157\166\x69\144\145\162\40\x53\145\x74\x74\151\156\x67\x73\40\151\163\40\151\x6e\143\157\162\162\145\x63\164\74\57\x70\x3e\12\11\11\11\x9\x9\x3c\x70\76\x3c\163\x74\162\157\156\x67\x3e\105\170\x70\x65\143\164\145\144\40\x45\156\164\151\164\x79\40\111\x44\72\x20\74\x2f\x73\x74\x72\x6f\x6e\x67\76" . xss::filter($fl) . "\x3c\160\x3e\xa\11\x9\x9\11\x9\74\160\x3e\x3c\x73\164\162\x6f\156\x67\76\x45\156\x74\x69\164\x79\40\111\x44\40\x46\x6f\165\156\144\x3a\40\74\57\163\164\162\x6f\x6e\x67\x3e" . xss::filter(Utilities::getIdpIssuer()) . "\74\x2f\160\76\12\11\11\x9\11\x9\74\x2f\144\151\x76\76\12\11\11\x9\x9\x9\74\x64\151\x76\x20\163\164\171\x6c\145\75\x22\155\x61\162\147\151\156\72\63\x25\x3b\x64\x69\x73\x70\x6c\141\171\x3a\142\x6c\157\143\153\73\164\145\x78\164\55\141\154\151\147\x6e\72\143\145\x6e\164\x65\x72\73\x22\76\xa\x9\x9\x9\11\11\x3c\x64\151\166\40\x73\164\171\x6c\x65\75\x22\x6d\141\x72\x67\x69\156\72\x33\45\x3b\x64\x69\163\x70\154\141\x79\x3a\x62\x6c\157\x63\x6b\73\164\145\x78\x74\x2d\141\x6c\x69\x67\x6e\72\143\145\x6e\x74\145\x72\x3b\x22\76\74\x69\x6e\x70\x75\164\40\163\164\171\154\x65\75\x22\x70\x61\144\144\151\156\147\x3a\61\45\73\x77\151\x64\x74\150\x3a\x31\x30\60\x70\x78\73\142\x61\143\153\x67\x72\157\x75\156\x64\72\40\43\60\60\x39\x31\103\104\40\x6e\157\156\x65\40\x72\145\160\145\141\164\40\x73\x63\162\157\154\154\x20\60\x25\40\60\x25\73\143\x75\x72\163\157\x72\x3a\x20\x70\157\151\x6e\164\145\x72\x3b\146\x6f\x6e\x74\x2d\x73\x69\172\145\x3a\61\x35\160\x78\73\x62\x6f\x72\144\145\x72\55\167\151\144\x74\x68\x3a\x20\61\160\x78\73\142\x6f\162\x64\145\x72\55\x73\164\171\x6c\145\x3a\40\x73\157\154\151\144\73\142\157\x72\x64\145\162\x2d\x72\141\x64\151\165\x73\72\x20\63\160\x78\73\167\x68\x69\164\x65\x2d\163\160\x61\x63\x65\72\40\156\157\x77\162\x61\160\x3b\x62\157\x78\55\x73\x69\x7a\151\x6e\x67\x3a\x20\x62\x6f\162\x64\x65\162\55\142\x6f\x78\73\x62\157\162\x64\x65\x72\55\x63\157\x6c\157\x72\72\40\x23\x30\x30\67\x33\101\x41\73\142\x6f\170\55\163\x68\141\144\x6f\167\72\40\60\160\170\x20\x31\160\170\x20\60\160\x78\40\162\147\x62\x61\50\61\62\x30\x2c\40\62\x30\x30\54\40\62\x33\x30\x2c\40\60\56\x36\51\40\151\156\163\145\164\73\x63\x6f\x6c\x6f\162\72\x20\x23\106\x46\x46\73\42\164\x79\160\145\75\42\142\x75\x74\x74\x6f\156\42\40\x76\x61\154\x75\x65\75\42\104\x6f\x6e\145\42\40\x6f\156\x43\x6c\151\x63\x6b\x3d\x22\x73\x65\154\146\56\x63\154\x6f\163\145\50\51\x3b\42\76\x3c\x2f\x64\151\166\x3e";
        Ug:
        exit;
        goto yo;
        nn:
        if (strcmp($HF, self::getIssuer()) === 0) {
            goto Y9;
        }
        if (array_key_exists("\122\145\154\x61\171\x53\164\141\164\x65", $_REQUEST) && $_REQUEST["\122\x65\154\x61\x79\x53\x74\141\164\145"] == "\164\x65\163\x74\126\x61\154\151\x64\141\x74\145") {
            goto Pf;
        }
        echo "\74\144\151\166\x20\163\164\171\154\x65\x3d\42\x63\x6f\154\x6f\162\x3a\x20\x23\x61\71\x34\64\64\62\x3b\x66\x6f\x6e\x74\55\x73\151\x7a\x65\x3a\61\64\160\x74\x3b\40\155\141\x72\147\x69\x6e\x2d\x62\x6f\164\164\157\x6d\x3a\62\60\160\x78\73\x22\76\x3c\x70\x3e\74\142\76\105\x72\162\x6f\x72\x3a\40\x3c\57\142\76\127\x65\x20\x63\157\165\154\x64\x20\x6e\157\164\x20\x73\x69\147\x6e\40\171\157\x75\x20\x69\x6e\56\40\x50\x6c\145\141\163\145\x20\x63\x6f\x6e\164\141\143\164\x20\x79\x6f\x75\162\40\101\144\155\151\156\x69\x73\164\162\x61\164\157\162\x2e\74\x2f\x70\x3e\x3c\x2f\x64\x69\166\x3e";
        goto Um;
        Pf:
        echo "\74\x64\x69\x76\40\x73\x74\x79\x6c\x65\x3d\x22\146\157\x6e\x74\55\146\141\155\151\154\171\72\103\x61\154\151\142\162\151\73\160\141\144\144\151\x6e\147\x3a\x30\x20\x33\x25\73\x22\76";
        echo "\x3c\x64\151\x76\40\x73\164\x79\154\x65\75\x22\x63\157\x6c\x6f\x72\72\x20\43\x61\71\x34\64\64\62\x3b\x62\141\143\x6b\x67\x72\x6f\x75\x6e\x64\x2d\143\157\154\x6f\x72\72\40\43\146\62\x64\x65\x64\145\73\160\x61\x64\144\x69\x6e\147\72\40\61\x35\160\x78\x3b\155\x61\162\x67\x69\x6e\x2d\x62\157\x74\164\x6f\155\72\x20\x32\60\160\170\73\x74\145\x78\164\55\x61\154\x69\x67\x6e\72\x63\145\x6e\x74\x65\x72\73\142\157\162\x64\145\x72\x3a\x31\x70\170\x20\x73\x6f\154\x69\x64\40\43\105\66\102\x33\x42\x32\x3b\x66\157\156\x74\x2d\x73\x69\172\145\x3a\x31\x38\x70\164\x3b\x22\x3e\40\105\x52\122\x4f\122\x3c\x2f\144\151\x76\76\xa\40\40\40\x20\x20\x20\x20\40\x20\x20\x20\40\40\x20\x20\x20\40\40\x20\x20\x3c\x64\151\x76\40\x73\x74\171\154\145\x3d\x22\x63\157\154\x6f\x72\72\40\x23\141\71\x34\x34\64\x32\x3b\x66\x6f\156\164\x2d\x73\151\172\x65\72\61\x34\160\x74\x3b\x20\x6d\141\x72\x67\x69\x6e\55\142\157\164\x74\x6f\155\x3a\62\x30\x70\x78\73\x22\76\x3c\x70\76\x3c\163\164\x72\x6f\x6e\x67\x3e\x45\x72\162\157\162\x3a\40\74\57\x73\164\x72\x6f\x6e\x67\x3e\111\156\x76\141\154\151\144\40\101\165\144\x69\145\x6e\143\x65\40\x55\122\x49\x2e\x3c\57\x70\76\12\40\40\x20\40\x20\x20\40\x20\x20\x20\x20\x20\40\x20\x20\40\40\x20\x20\x20\x3c\160\x3e\x50\154\x65\141\x73\x65\x20\143\x6f\156\164\x61\x63\x74\x20\x79\x6f\x75\162\40\141\x64\x6d\x69\x6e\x69\x73\164\162\x61\x74\157\x72\40\141\x6e\144\x20\x72\x65\160\x6f\162\164\x20\x74\150\x65\x20\x66\x6f\x6c\154\x6f\x77\x69\x6e\147\40\145\162\x72\157\x72\72\74\x2f\x70\x3e\xa\40\40\x20\40\40\40\x20\40\x20\40\x20\40\40\40\40\40\40\x20\x20\40\x3c\x70\x3e\x3c\x73\x74\x72\x6f\x6e\147\76\x50\157\x73\x73\x69\x62\154\145\x20\103\x61\165\163\145\72\x20\x3c\57\x73\x74\x72\157\x6e\147\76\x54\x68\x65\40\166\141\x6c\x75\145\x20\x6f\x66\40\x27\101\x75\144\x69\145\156\x63\x65\x20\x55\x52\111\x27\40\146\x69\145\154\144\x20\157\156\40\x49\x64\x65\156\x74\x69\x74\171\x20\120\x72\x6f\166\151\144\145\162\x27\x73\x20\163\151\x64\145\x20\151\x73\40\151\156\143\x6f\162\162\x65\x63\164\74\x2f\160\x3e\12\40\40\x20\x20\40\40\40\40\40\40\40\x20\40\40\x20\40\40\40\x20\40\74\x70\76\105\170\x70\x65\x63\x74\x65\144\40\x6f\156\145\40\157\x66\x20\164\x68\145\x20\x41\165\144\151\145\156\143\x65\163\x20\164\x6f\x20\142\145\72\40" . xss::filter(self::getIssuer()) . "\x3c\160\76\12\x20\x20\40\40\x20\40\40\x20\x20\40\x20\x20\40\40\x20\40\40\40\40\x20\x3c\x2f\144\151\166\76\12\x20\x20\x20\x20\x20\x20\40\x20\x20\40\40\40\40\x20\x20\40\40\40\40\x20\74\144\151\x76\x20\163\164\x79\x6c\x65\x3d\42\x6d\141\162\147\151\x6e\x3a\x33\x25\x3b\144\x69\163\x70\154\141\171\72\142\x6c\157\x63\153\73\164\145\170\x74\55\x61\154\151\147\156\x3a\143\x65\x6e\164\x65\162\x3b\x22\x3e\xa\40\x20\40\40\x20\40\40\40\40\40\x20\x20\40\40\40\40\40\x20\40\40\74\x64\x69\x76\40\163\164\x79\154\145\75\x22\155\x61\x72\x67\151\x6e\72\63\x25\x3b\144\151\x73\x70\x6c\x61\x79\72\x62\154\x6f\143\x6b\73\x74\145\170\x74\x2d\141\154\x69\x67\156\x3a\143\145\x6e\164\x65\162\x3b\42\x3e\74\x69\x6e\160\165\x74\x20\163\164\x79\x6c\x65\x3d\42\x70\141\x64\x64\151\156\x67\72\61\x25\x3b\x77\151\x64\x74\150\72\x31\60\60\x70\x78\73\x62\x61\x63\x6b\x67\x72\x6f\165\x6e\x64\72\40\x23\x30\60\x39\61\x43\104\40\x6e\157\x6e\x65\x20\162\x65\x70\x65\141\164\x20\163\x63\162\x6f\154\x6c\40\60\x25\x20\60\45\73\x63\x75\x72\x73\157\x72\x3a\40\160\x6f\x69\156\164\x65\x72\x3b\146\x6f\156\164\x2d\x73\x69\172\x65\x3a\61\x35\160\x78\x3b\142\x6f\162\144\145\162\x2d\167\151\x64\164\x68\x3a\x20\x31\160\x78\x3b\x62\157\162\x64\x65\x72\x2d\x73\164\171\x6c\145\72\40\x73\157\x6c\151\x64\73\x62\x6f\x72\x64\x65\162\x2d\x72\141\144\151\165\163\72\x20\63\x70\170\73\167\150\x69\x74\x65\x2d\163\x70\141\x63\x65\72\40\x6e\157\x77\162\141\x70\73\142\x6f\170\55\163\151\172\151\156\147\72\x20\142\157\162\x64\145\162\55\142\157\170\x3b\x62\x6f\x72\144\x65\x72\x2d\x63\x6f\154\157\x72\72\40\43\x30\60\x37\x33\x41\x41\73\142\x6f\170\55\x73\150\141\x64\157\167\72\40\60\160\170\40\x31\x70\170\x20\x30\160\170\40\162\147\x62\141\x28\61\62\x30\54\40\62\x30\x30\x2c\40\62\63\x30\x2c\40\60\x2e\66\51\40\151\x6e\x73\145\x74\73\x63\x6f\154\x6f\x72\72\40\x23\106\x46\106\x3b\x22\x74\171\160\145\x3d\x22\x62\x75\164\x74\157\156\42\40\x76\x61\x6c\x75\145\x3d\x22\104\x6f\156\x65\42\40\157\x6e\103\x6c\151\x63\153\75\42\163\145\154\x66\x2e\x63\154\157\x73\x65\x28\51\73\x22\76\74\x2f\x64\x69\x76\76";
        Um:
        exit;
        goto mB;
        Y9:
        return TRUE;
        mB:
        yo:
    }
    private static function doDecryptElement(DOMElement $i2, XMLSecurityKey $RV, array &$rF)
    {
        $O1 = new XMLSecEnc();
        $O1->setNode($i2);
        $O1->type = $i2->getAttribute("\x54\x79\160\x65");
        $Xg = $O1->locateKey($i2);
        if ($Xg) {
            goto su;
        }
        echo sprintf("\103\157\165\154\144\40\156\157\x74\40\154\157\143\141\x74\145\40\x6b\145\x79\40\141\154\x67\x6f\x72\151\x74\150\155\x20\x69\156\x20\145\156\143\x72\171\160\x74\x65\144\40\x64\141\164\141\56");
        exit;
        su:
        $bs = $O1->locateKeyInfo($Xg);
        if ($bs) {
            goto BP;
        }
        echo sprintf("\x43\x6f\x75\x6c\144\40\156\157\x74\40\x6c\157\x63\x61\164\145\40\x3c\x64\163\151\x67\x3a\x4b\x65\171\111\156\x66\157\76\x20\x66\x6f\162\40\164\x68\x65\x20\145\156\x63\162\x79\x70\x74\x65\144\x20\x6b\x65\171\56");
        exit;
        BP:
        $a2 = $RV->getAlgorithm();
        if ($bs->isEncrypted) {
            goto M5;
        }
        $Kz = $Xg->getAlgorithm();
        if (!($a2 !== $Kz)) {
            goto U4;
        }
        echo sprintf("\101\x6c\x67\157\x72\x69\x74\x68\155\x20\x6d\151\163\x6d\x61\x74\143\150\x20\x62\145\164\x77\x65\145\156\40\x69\x6e\160\165\x74\x20\x6b\145\171\x20\141\156\144\40\x6b\145\x79\40\x69\x6e\40\155\145\163\x73\141\x67\x65\x2e\40" . "\x4b\x65\171\x20\x77\141\163\72\x20" . xss::filter(var_export($a2, TRUE)) . "\73\40\x6d\x65\x73\163\141\147\x65\x20\167\x61\163\72\x20" . xss::filter(var_export($Kz, TRUE)));
        exit;
        U4:
        $Xg = $RV;
        goto lx;
        M5:
        $yb = $bs->getAlgorithm();
        if (!in_array($yb, $rF, TRUE)) {
            goto N_;
        }
        echo sprintf("\x41\154\147\x6f\x72\x69\164\150\x6d\40\144\151\163\x61\x62\x6c\145\x64\x3a\40" . xss::filter(var_export($yb, TRUE)));
        exit;
        N_:
        if (!($yb === XMLSecurityKey::RSA_OAEP_MGF1P && $a2 === XMLSecurityKey::RSA_1_5)) {
            goto t0;
        }
        $a2 = XMLSecurityKey::RSA_OAEP_MGF1P;
        t0:
        if (!($a2 !== $yb)) {
            goto VD;
        }
        echo sprintf("\x41\154\147\x6f\x72\x69\x74\150\155\40\155\x69\163\x6d\141\x74\143\x68\40\142\x65\x74\x77\x65\145\x6e\x20\x69\x6e\160\x75\x74\x20\x6b\x65\171\x20\141\156\x64\40\153\145\171\40\165\x73\145\x64\x20\x74\157\40\145\x6e\143\162\x79\160\164\40" . "\x20\x74\x68\145\x20\x73\171\x6d\155\x65\164\x72\x69\143\x20\x6b\145\171\40\146\x6f\162\x20\164\x68\145\x20\x6d\x65\163\x73\x61\x67\x65\56\40\x4b\145\171\40\167\x61\163\x3a\40" . xss::filter(var_export($a2, TRUE)) . "\x3b\40\x6d\x65\x73\163\141\x67\145\x20\167\x61\163\72\40" . xss::filter(var_export($yb, TRUE)));
        exit;
        VD:
        $DK = $bs->encryptedCtx;
        $bs->key = $RV->key;
        $fS = $Xg->getSymmetricKeySize();
        if (!($fS === NULL)) {
            goto Pu;
        }
        echo sprintf("\125\156\x6b\156\157\167\x6e\40\153\x65\171\x20\163\x69\172\145\x20\146\157\x72\x20\x65\156\x63\162\171\x70\x74\151\157\x6e\x20\141\x6c\x67\x6f\x72\151\164\x68\155\72\40" . xss::filter(var_export($Xg->type, TRUE)));
        exit;
        Pu:
        try {
            $C2 = $DK->decryptKey($bs);
            if (!(strlen($C2) != $fS)) {
                goto HL;
            }
            echo sprintf("\x55\156\145\170\160\x65\143\164\x65\x64\x20\x6b\145\x79\40\163\x69\172\145\40\x28" . xss::filter(strlen($C2) * 8) . "\142\x69\x74\163\x29\x20\x66\x6f\162\x20\x65\156\143\162\x79\x70\164\x69\x6f\156\x20\x61\x6c\147\157\162\x69\x74\x68\x6d\72\x20" . xss::filter(var_export($Xg->type, TRUE)));
            exit;
            HL:
        } catch (Exception $Ep) {
            $AK = $DK->getCipherValue();
            $mZ = openssl_pkey_get_details($bs->key);
            $mZ = sha1(serialize($mZ), TRUE);
            $C2 = sha1($AK . $mZ, TRUE);
            if (strlen($C2) > $fS) {
                goto sD;
            }
            if (strlen($C2) < $fS) {
                goto si;
            }
            goto Nl;
            sD:
            $C2 = substr($C2, 0, $fS);
            goto Nl;
            si:
            $C2 = str_pad($C2, $fS);
            Nl:
        }
        $Xg->loadkey($C2);
        lx:
        $PF = $Xg->getAlgorithm();
        if (!in_array($PF, $rF, TRUE)) {
            goto ew;
        }
        echo sprintf("\x41\x6c\x67\157\x72\151\x74\150\x6d\x20\x64\x69\x73\x61\x62\x6c\x65\x64\x3a\x20" . xss::filter(var_export($PF, TRUE)));
        exit;
        ew:
        $Ma = $O1->decryptNode($Xg, FALSE);
        $A3 = "\x3c\162\x6f\157\164\40\170\155\x6c\156\x73\72\163\x61\x6d\154\x3d\42\165\x72\x6e\72\157\x61\163\x69\163\72\156\141\x6d\145\163\72\x74\x63\72\123\x41\x4d\114\72\x32\56\x30\72\x61\163\x73\145\x72\x74\151\157\156\x22\x20" . "\x78\x6d\x6c\156\x73\72\x78\x73\151\x3d\x22\x68\164\164\x70\72\x2f\x2f\167\167\x77\56\167\63\56\x6f\162\147\x2f\x32\x30\60\x31\57\x58\115\114\123\x63\150\145\x6d\141\x2d\x69\x6e\x73\x74\141\x6e\143\145\42\76" . $Ma . "\x3c\57\x72\x6f\x6f\164\x3e";
        $bq = new DOMDocument();
        if (@$bq->loadXML($A3)) {
            goto ww;
        }
        echo sprintf("\106\x61\x69\x6c\145\144\x20\x74\x6f\x20\x70\141\x72\x73\x65\x20\144\145\143\x72\171\160\164\x65\x64\40\130\115\x4c\56\40\115\141\171\x62\x65\x20\x74\150\145\x20\x77\162\157\x6e\147\40\x73\150\x61\x72\x65\x64\x6b\x65\171\40\167\x61\163\40\x75\x73\x65\x64\77");
        throw new Exception("\106\x61\151\x6c\x65\144\40\164\157\x20\x70\141\x72\x73\x65\40\144\x65\143\162\171\160\x74\145\x64\40\130\115\x4c\x2e\40\x4d\x61\x79\x62\x65\40\x74\150\x65\40\x77\162\157\156\147\40\x73\x68\x61\162\x65\x64\x6b\145\171\40\167\x61\163\x20\x75\163\x65\x64\77");
        ww:
        $Yl = $bq->firstChild->firstChild;
        if (!($Yl === NULL)) {
            goto Ro;
        }
        echo sprintf("\x4d\151\x73\163\151\156\x67\40\x65\156\143\162\171\x70\164\145\x64\x20\145\154\145\155\145\156\164\x2e");
        throw new Exception("\x4d\x69\163\163\x69\x6e\147\x20\x65\x6e\x63\x72\x79\x70\164\145\x64\x20\x65\x6c\x65\155\145\x6e\x74\56");
        Ro:
        if ($Yl instanceof DOMElement) {
            goto u1;
        }
        echo sprintf("\x44\x65\x63\162\171\x70\164\145\x64\x20\x65\x6c\145\155\145\156\164\40\167\x61\163\x20\x6e\157\x74\x20\x61\143\164\x75\x61\154\154\171\x20\141\40\104\117\115\105\154\145\x6d\145\x6e\164\56");
        u1:
        return $Yl;
    }
    public static function decryptElement(DOMElement $i2, XMLSecurityKey $RV, array $rF = array(), XMLSecurityKey $cN = NULL)
    {
        try {
            return self::doDecryptElement($i2, $RV, $rF);
        } catch (Exception $Ep) {
            if (is_null($cN)) {
                goto hL;
            }
            try {
                return self::doDecryptElement($i2, $cN, $rF);
            } catch (Exception $ul) {
            }
            hL:
            echo sprintf("\x46\141\151\x6c\145\144\40\164\157\x20\x64\x65\143\x72\x79\x70\x74\40\130\115\114\40\145\154\x65\155\x65\156\x74\x2e");
            exit;
        }
    }
    public static function showErrorMessage($am, $i6, $vU, $rz = FALSE)
    {
        global $base_url;
        $a1 = $rz === TRUE ? "\x6f\x6e\103\154\x69\143\153\x3d\x22\163\145\154\x66\x2e\143\154\157\163\x65\x28\51\73\42" : "\x68\162\145\x66\75\42" . $base_url . "\57\x75\x73\145\162\57\x6c\x6f\x67\x69\x6e\42";
        echo "\x3c\144\151\166\x20\163\x74\171\x6c\145\x3d\x22\x66\x6f\x6e\x74\55\146\x61\x6d\151\154\171\72\x43\x61\154\x69\142\x72\151\x3b\x70\x61\x64\144\x69\156\x67\72\60\x20\63\45\73\42\76";
        echo "\x3c\144\151\x76\40\x73\x74\x79\x6c\x65\x3d\x22\x63\x6f\154\157\x72\72\x20\43\141\71\x34\x34\64\62\x3b\x62\x61\143\x6b\147\162\157\165\156\144\x2d\x63\157\x6c\157\x72\72\x20\x23\x66\62\144\145\144\x65\x3b\x70\x61\x64\x64\151\x6e\147\72\x20\61\65\x70\170\x3b\x6d\x61\162\x67\151\x6e\x2d\x62\157\x74\164\157\x6d\72\40\x32\x30\160\x78\x3b\164\145\x78\164\55\141\154\151\147\156\72\x63\145\156\x74\145\x72\x3b\142\x6f\162\144\x65\162\72\61\160\170\40\163\x6f\x6c\x69\144\40\43\105\x36\102\x33\x42\x32\x3b\x66\157\x6e\x74\55\x73\x69\172\x65\72\61\70\160\x74\73\x22\76\40\105\122\122\117\122\x3c\x2f\144\x69\x76\x3e\12\x20\40\x20\x20\x20\40\40\x20\x20\x20\x20\x20\x20\x20\x20\x20\40\x20\x20\40\40\40\x20\x20\x20\40\x20\x20\x20\40\40\x20\74\x64\x69\166\x20\163\x74\171\x6c\x65\x3d\42\x63\x6f\x6c\x6f\x72\72\x20\43\x61\x39\x34\64\x34\x32\x3b\146\157\x6e\x74\55\x73\x69\x7a\145\72\61\64\160\164\73\40\x6d\141\x72\147\151\156\x2d\142\x6f\x74\164\157\155\72\x32\x30\160\x78\73\x22\x3e\x3c\x70\x3e\74\163\164\162\x6f\x6e\x67\76\105\x72\162\157\162\x3a\40\74\x2f\163\164\x72\x6f\x6e\147\x3e" . xss::filter($am) . "\x3c\x2f\160\x3e\xa\40\40\x20\x20\40\x20\40\x20\x20\40\40\x20\x20\x20\40\x20\x20\40\x20\40\x20\40\x20\40\x20\40\x20\x20\40\x20\x20\x20\x20\x20\40\40\x3c\x70\76" . xss::filter($i6) . "\74\57\x70\76\xa\x20\x20\x20\40\x20\x20\x20\x20\x20\x20\40\40\40\40\40\x20\x20\x20\40\40\x20\x20\x20\40\40\x20\40\40\40\x20\40\x20\40\x20\40\x20\74\x70\76\74\x73\x74\162\x6f\x6e\x67\x3e\x50\157\x73\x73\x69\142\154\x65\x20\103\x61\165\163\145\72\x20\74\57\163\164\162\x6f\x6e\147\x3e" . xss::filter($vU) . "\x3c\x2f\160\76\12\40\40\x20\40\40\40\40\40\x20\40\x20\x20\40\x20\40\x20\40\40\x20\x20\x20\40\x20\40\x20\x20\x20\x20\40\x20\x20\x20\74\x2f\x64\151\166\x3e\12\x20\x20\x20\x20\40\40\40\x20\x20\40\x20\x20\40\x20\x20\40\40\x20\40\x20\x20\40\x20\x20\40\40\x20\40\40\x20\40\x20\74\144\151\x76\40\x73\x74\171\x6c\145\x3d\x22\x6d\x61\162\147\x69\156\x3a\x33\45\73\x64\x69\x73\x70\x6c\x61\x79\x3a\x62\154\x6f\143\153\73\x74\145\x78\164\x2d\141\154\151\147\x6e\x3a\143\145\156\164\x65\x72\x3b\42\x3e\x3c\x2f\x64\x69\x76\x3e\xa\40\x20\40\x20\40\x20\x20\x20\40\40\40\x20\40\40\x20\x20\x20\40\40\x20\40\40\x20\x20\x20\x20\x20\40\40\x20\x20\x20\x3c\x64\x69\166\40\x73\x74\171\154\x65\x3d\42\155\141\x72\x67\151\156\72\63\45\73\144\151\163\160\x6c\141\171\72\x62\154\x6f\x63\153\x3b\x74\x65\x78\164\55\x61\154\x69\x67\156\x3a\x63\145\x6e\164\x65\162\x3b\x22\x3e\xa\x20\40\x20\x20\40\40\x20\40\x20\40\x20\40\x20\x20\40\x20\40\x20\x20\40\x20\40\x20\40\40\x20\40\40\x20\40\40\x20\x20\40\40\40\74\141\40\163\x74\x79\x6c\x65\75\x22\160\141\144\x64\x69\x6e\147\x3a\x31\45\x3b\167\x69\144\164\x68\x3a\x31\x30\x30\x70\170\x3b\x62\x61\x63\153\x67\x72\x6f\x75\x6e\x64\72\40\43\60\x30\71\61\103\104\x20\156\x6f\x6e\x65\x20\x72\145\160\145\x61\x74\40\x73\143\162\157\154\x6c\x20\x30\x25\40\x30\x25\73\x63\x75\162\163\x6f\x72\x3a\40\160\x6f\151\x6e\164\x65\x72\x3b\146\157\x6e\x74\55\x73\x69\x7a\145\x3a\61\x35\x70\x78\73\142\157\162\144\x65\162\x2d\x77\x69\144\x74\x68\x3a\x20\x31\160\170\x3b\142\x6f\162\x64\145\162\x2d\x73\164\171\x6c\x65\x3a\x20\x73\x6f\154\x69\144\x3b\x62\157\162\144\145\162\x2d\x72\141\144\151\x75\x73\72\40\x33\x70\x78\73\167\x68\x69\164\x65\55\x73\160\x61\143\145\72\x20\x6e\x6f\x77\x72\x61\x70\x3b\142\x6f\x78\55\163\151\172\151\x6e\x67\x3a\x20\142\x6f\x72\144\x65\x72\55\x62\x6f\170\73\142\157\x72\144\145\162\55\x63\157\x6c\x6f\x72\x3a\40\x23\x30\60\x37\63\x41\x41\x3b\142\157\170\x2d\163\x68\x61\144\x6f\167\x3a\x20\60\160\x78\x20\x31\160\x78\x20\60\x70\x78\40\x72\147\x62\x61\x28\x31\62\x30\54\x20\62\60\x30\54\x20\62\x33\x30\x2c\x20\60\56\66\51\x20\x69\x6e\x73\x65\x74\73\x63\x6f\154\157\162\72\x20\43\106\106\106\73\x20\164\145\x78\164\55\x64\x65\143\x6f\x72\141\x74\x69\x6f\x6e\x3a\x20\x6e\x6f\156\145\73\x22\164\171\160\x65\75\42\142\x75\164\x74\x6f\x6e\42\x20\x20" . $a1 . "\40\x3e\x44\157\156\145\x3c\x2f\141\x3e\xa\x20\x20\x20\40\x20\40\x20\40\40\40\40\40\40\40\x20\x20\40\40\x20\x20\40\40\x20\40\40\40\x20\40\x20\40\40\x20\x3c\x2f\x64\151\x76\x3e";
        exit;
    }
    public static function getEncryptionAlgorithm($I1)
    {
        switch ($I1) {
            case "\150\164\164\160\72\57\57\167\x77\x77\x2e\x77\63\x2e\157\162\x67\x2f\62\60\x30\61\x2f\60\x34\57\170\x6d\154\x65\156\x63\43\x74\162\x69\160\x6c\145\144\145\163\x2d\x63\x62\143":
                return XMLSecurityKey::TRIPLEDES_CBC;
                goto f_;
            case "\150\164\164\160\x3a\57\x2f\167\x77\x77\56\167\63\56\x6f\x72\147\57\62\x30\60\x31\57\x30\64\x2f\170\x6d\154\145\156\x63\x23\x61\145\x73\x31\x32\70\x2d\x63\x62\x63":
                return XMLSecurityKey::AES128_CBC;
            case "\150\164\164\x70\x3a\57\x2f\x77\167\x77\56\x77\x33\x2e\157\162\147\57\x32\60\x30\61\57\x30\64\x2f\170\x6d\154\145\156\x63\x23\x61\145\163\61\x39\62\x2d\x63\142\143":
                return XMLSecurityKey::AES192_CBC;
                goto f_;
            case "\150\164\164\160\72\x2f\x2f\x77\167\x77\x2e\167\63\56\157\162\147\57\62\60\x30\61\57\60\64\57\x78\x6d\154\145\x6e\x63\x23\141\145\163\62\65\66\55\x63\x62\143":
                return XMLSecurityKey::AES256_CBC;
                goto f_;
            case "\x68\164\x74\160\x3a\57\57\x77\x77\167\x2e\x77\63\x2e\157\x72\147\57\62\x30\60\61\x2f\x30\x34\57\x78\x6d\154\145\x6e\x63\x23\x72\163\x61\55\x31\x5f\65":
                return XMLSecurityKey::RSA_1_5;
                goto f_;
            case "\150\x74\x74\160\x3a\57\57\167\167\x77\x2e\167\x33\x2e\x6f\162\x67\x2f\x32\60\x30\61\x2f\x30\64\57\170\x6d\154\145\156\143\x23\x72\163\x61\x2d\157\x61\145\x70\55\x6d\147\146\x31\160":
                return XMLSecurityKey::RSA_OAEP_MGF1P;
                goto f_;
            case "\x68\164\164\160\x3a\x2f\x2f\167\167\167\56\167\x33\56\157\162\x67\x2f\62\60\60\60\57\60\x39\57\170\155\154\144\x73\151\147\x23\x64\x73\x61\x2d\163\x68\141\x31":
                return XMLSecurityKey::DSA_SHA1;
                goto f_;
            case "\x68\164\164\160\72\57\57\x77\x77\x77\x2e\x77\x33\x2e\157\162\147\57\x32\x30\x30\x30\57\x30\x39\57\x78\155\x6c\x64\163\151\x67\x23\162\x73\141\x2d\163\x68\141\x31":
                return XMLSecurityKey::RSA_SHA1;
                goto f_;
            case "\150\164\x74\x70\x3a\57\x2f\x77\167\167\x2e\167\63\x2e\157\162\x67\x2f\x32\60\x30\61\x2f\x30\64\x2f\170\155\x6c\x64\x73\x69\x67\x2d\x6d\157\162\145\x23\x72\x73\141\55\x73\150\x61\62\65\x36":
                return XMLSecurityKey::RSA_SHA256;
                goto f_;
            case "\x68\164\164\x70\72\57\57\x77\x77\167\x2e\167\63\x2e\x6f\x72\x67\57\x32\x30\x30\x31\x2f\x30\64\57\x78\x6d\x6c\144\x73\x69\147\55\x6d\157\x72\145\43\x72\163\141\55\x73\150\141\x33\x38\64":
                return XMLSecurityKey::RSA_SHA384;
                goto f_;
            case "\x68\164\x74\160\72\57\x2f\x77\167\167\56\167\x33\56\157\x72\147\x2f\x32\x30\60\x31\x2f\x30\x34\x2f\170\155\154\144\x73\x69\147\x2d\155\x6f\162\x65\x23\x72\163\x61\x2d\x73\x68\141\65\x31\x32":
                return XMLSecurityKey::RSA_SHA512;
                goto f_;
            default:
                echo sprintf("\x49\156\166\x61\154\x69\x64\x20\105\156\143\x72\x79\160\164\151\x6f\x6e\40\x4d\x65\164\x68\x6f\x64\x3a\x20" . xss::filter($I1));
                exit;
                goto f_;
        }
        Xf:
        f_:
    }
    public static function sanitize_certificate($VZ)
    {
        $VZ = preg_replace("\57\x5b\15\xa\x5d\x2b\x2f", '', $VZ);
        $VZ = str_replace("\x2d", '', $VZ);
        $VZ = str_replace("\x42\105\107\111\x4e\x20\x43\x45\x52\x54\111\106\111\x43\x41\124\105", '', $VZ);
        $VZ = str_replace("\105\116\104\40\x43\105\122\124\111\x46\111\x43\x41\124\105", '', $VZ);
        $VZ = str_replace("\102\x45\107\111\x4e\40\x50\125\102\x4c\111\103\40\x4b\105\131", '', $VZ);
        $VZ = str_replace("\x45\116\104\40\120\125\x42\114\x49\103\x20\x4b\105\131", '', $VZ);
        $VZ = str_replace("\40", '', $VZ);
        $VZ = chunk_split($VZ, 64, "\15\xa");
        $VZ = "\55\55\x2d\55\x2d\102\105\x47\111\x4e\x20\x43\x45\x52\124\111\106\111\x43\101\x54\105\55\x2d\55\55\55\xd\xa" . $VZ . "\x2d\x2d\55\55\x2d\x45\x4e\104\40\x43\x45\122\124\111\x46\x49\103\x41\x54\105\55\x2d\x2d\x2d\x2d";
        return $VZ;
    }
    public static function sanitize_private_key($Lg)
    {
        $Lg = preg_replace("\x2f\133\xd\12\135\53\x2f", '', $Lg);
        $Lg = str_replace("\x2d", '', $Lg);
        $Lg = str_replace("\x42\x45\x47\111\x4e\40\x50\122\111\126\101\124\105\40\x4b\105\131", '', $Lg);
        $Lg = str_replace("\105\116\x44\40\x50\122\x49\126\101\x54\x45\x20\113\105\131", '', $Lg);
        $Lg = str_replace("\40", '', $Lg);
        $Lg = chunk_split($Lg, 64, "\15\12");
        $Lg = "\55\55\55\55\x2d\102\x45\x47\111\116\x20\120\122\111\126\x41\x54\x45\40\x4b\105\x59\x2d\x2d\x2d\55\55\15\12" . $Lg . "\x2d\x2d\55\55\55\x45\116\x44\40\120\x52\x49\126\101\x54\x45\x20\113\105\x59\55\x2d\55\x2d\55";
        return $Lg;
    }
    public static function upload_metadata($B5, $XU = false)
    {
        if (!empty(\Drupal::config("\155\x69\x6e\x69\x6f\x72\x61\x6e\x67\x65\x5f\163\x61\155\x6c\x2e\163\145\x74\164\151\156\x67\x73")->get("\x6d\x69\x6e\x69\x6f\162\141\x6e\147\x65\137\163\x61\x6d\154\137\x69\144\x70\x5f\156\141\x6d\145"))) {
            goto nA;
        }
        \Drupal::configFactory()->getEditable("\x6d\x69\156\151\x6f\x72\141\x6e\147\145\x5f\x73\141\x6d\154\x2e\163\145\164\x74\x69\156\147\163")->set("\155\151\156\151\157\x72\x61\x6e\x67\x65\137\x73\141\155\154\x5f\x69\x64\x70\x5f\x6e\141\155\x65", "\x49\144\x65\x6e\164\151\164\171\40\120\162\157\x76\x69\144\145\x72")->save();
        nA:
        $PP = new \DOMDocument();
        @$PP->loadXML($B5);
        restore_error_handler();
        $Zg = $PP->firstChild;
        if (!empty($Zg)) {
            goto A8;
        }
        \Drupal::messenger()->addMessage(t("\120\x6c\145\x61\x73\145\x20\x70\162\157\x76\151\144\145\40\x61\x20\x76\x61\x6c\x69\144\x20\155\145\x74\x61\144\x61\x74\x61\40\146\151\154\x65\56"), "\145\162\x72\x6f\162");
        return;
        goto nh;
        A8:
        $Ut = new MetadataReader($PP);
        $KE = $Ut->getIdentityProviders();
        if (!empty($KE)) {
            goto Px;
        }
        \Drupal::messenger()->addMessage(t("\120\154\145\x61\x73\145\x20\160\x72\x6f\166\151\144\x65\x20\x61\x20\166\x61\x6c\x69\x64\40\x6d\x65\x74\x61\x64\x61\164\x61\x20\146\x69\154\x65\x2e"), "\x65\162\162\x6f\x72");
        return;
        Px:
        foreach ($KE as $C2 => $DE) {
            $wb = $DE->getLoginURL("\110\x54\124\120\x2d\122\145\144\151\162\145\143\164");
            $O6 = $DE->getLogoutURL("\x48\124\x54\x50\55\x52\x65\144\x69\162\145\x63\x74");
            if (!empty($wb)) {
                goto Im;
            }
            $wb = $DE->getLoginURL("\110\x54\x54\120\x2d\120\x4f\x53\124");
            $wb = $DE->getLoginURL("\110\x54\124\x50\55\120\x4f\123\x54");
            Im:
            if (!empty($O6)) {
                goto Gp;
            }
            $O6 = $DE->getLogoutURL("\x48\124\x54\120\x2d\120\117\123\x54");
            Gp:
            $TV = $DE->getEntityID();
            $ZC = $DE->getSigningCertificate();
            $yD = serialize($ZC);
            if (!($XU == true)) {
                goto g9;
            }
            \Drupal::configFactory()->getEditable("\155\151\156\151\x6f\162\x61\156\x67\x65\x5f\x73\x61\x6d\154\56\x73\145\x74\x74\x69\156\x67\163")->set("\x6d\151\156\x69\157\162\x61\156\x67\145\x5f\163\141\x6d\x6c\x5f\x69\144\160\x5f\x6c\x6f\147\157\165\x74\137\x75\x72\154", $O6)->save();
            \Drupal::configFactory()->getEditable("\x6d\151\156\151\157\162\x61\x6e\x67\x65\137\x73\141\155\x6c\x2e\163\145\164\164\151\x6e\147\x73")->set("\x6d\x69\x6e\x69\x6f\162\x61\x6e\147\x65\x5f\163\x61\155\154\x5f\x69\144\x70\137\154\x6f\x67\151\156\137\165\x72\154", $wb)->save();
            g9:
            \Drupal::configFactory()->getEditable("\155\x69\156\x69\x6f\162\x61\156\x67\x65\137\163\x61\155\154\x2e\x73\x65\x74\x74\x69\156\x67\163")->set("\155\x69\x6e\151\157\162\141\156\147\145\x5f\x73\x61\155\154\137\151\x64\x70\x5f\x69\x73\x73\x75\145\162", $TV)->save();
            \Drupal::configFactory()->getEditable("\x6d\151\156\x69\157\162\x61\156\x67\145\x5f\x73\x61\x6d\154\56\x73\x65\x74\x74\x69\x6e\x67\163")->set("\155\x69\x6e\x69\x6f\x72\141\x6e\x67\x65\137\163\x61\155\x6c\137\151\x64\x70\137\143\145\162\x74\151\x66\x69\143\x61\x74\x65", $yD)->save();
            TZ:
        }
        aI:
        if (!($XU == true)) {
            goto Av;
        }
        \Drupal::messenger()->addMessage(t("\x49\x64\x65\x6e\x74\151\x74\171\x20\x50\x72\157\x76\151\144\145\x72\x20\x43\157\x6e\x66\151\x67\x75\x72\141\x74\x69\x6f\x6e\40\163\165\143\x63\145\x73\163\x66\165\x6c\154\x79\x20\x73\x61\166\145\144\56"));
        return;
        Av:
        nh:
    }
    public static function getSamlRequestPlanName()
    {
        return MiniorangeSAMLConstants::PLUGIN_VERSION == MiniorangeSAMLConstants::ENTERPRISE_VERSION ? "\x64\162\165\160\141\154\x38\137\155\x69\156\x69\x6f\x72\x61\x6e\147\145\x5f\163\x61\x6d\x6c\137\145\x6e\x74\x65\x72\160\162\x69\163\x65\x5f\x70\154\141\156" : "\144\162\x75\x70\141\x6c\70\x5f\155\151\x6e\151\x6f\x72\141\156\147\145\x5f\x73\x61\155\x6c\x5f\160\x72\x65\x6d\x69\165\x6d\137\160\154\141\156";
    }
    public static function getSamlRequestPlanType()
    {
        return MiniorangeSAMLConstants::PLUGIN_VERSION == MiniorangeSAMLConstants::ENTERPRISE_VERSION ? "\x44\122\125\x50\x41\x4c\70\x5f\123\x41\x4d\114\137\123\x50\x5f\x45\116\x54\x45\122\120\122\111\123\105\137\x4d\117\x44\x55\x4c\x45" : "\x44\x52\x55\x50\x41\x4c\70\137\123\101\115\114\x5f\x53\x50\137\120\122\105\x4d\x49\125\115\x5f\115\117\x44\125\114\x45";
    }
    public static function Print_SAML_Request($JQ, $tK)
    {
        header("\103\x6f\156\x74\x65\156\164\x2d\x54\x79\160\145\x3a\40\x74\x65\x78\x74\x2f\x68\164\x6d\x6c");
        $cj = new \DOMDocument();
        $cj->preserveWhiteSpace = false;
        $cj->formatOutput = true;
        $cj->loadXML($JQ);
        if ($tK == "\144\x69\x73\x70\154\141\171\123\x41\115\114\122\x65\x71\165\145\163\x74") {
            goto ai;
        }
        $nD = "\x53\x41\x4d\114\40\x52\145\163\160\157\x6e\x73\x65";
        goto L4;
        ai:
        $nD = "\x53\101\115\114\40\122\145\161\x75\x65\x73\164";
        L4:
        $rC = $cj->saveXML();
        $U2 = htmlentities($rC);
        $U2 = rtrim($U2);
        $A3 = simplexml_load_string($rC);
        $Sb = json_encode($A3);
        $GM = Utilities::getModulePath() . "\57\143\163\x73\x2f\x6d\151\x6e\151\x6f\x72\141\x6e\x67\145\x5f\163\141\x6d\154\56\x6d\x6f\x64\165\154\x65\56\x63\163\163";
        $XS = Utilities::getModulePath() . "\x2f\152\x73\57\163\150\157\167\x53\101\x4d\x4c\122\145\163\x70\157\x6e\163\x65\56\152\163";
        echo "\x3c\x6c\x69\156\x6b\x20\x72\x65\x6c\x3d\x27\163\x74\171\154\145\x73\x68\145\145\164\47\40\x69\x64\75\x27\x6d\x6f\137\163\x61\155\x6c\x5f\141\144\x6d\x69\x6e\137\163\x65\x74\x74\151\x6e\147\163\137\163\164\171\154\145\x2d\143\x73\x73\47\x20\40\x68\162\x65\x66\x3d\47" . $GM . "\x27\x20\x74\x79\x70\145\75\x27\x74\x65\x78\x74\x2f\x63\x73\163\x27\40\x6d\145\144\151\x61\75\47\x61\x6c\154\x27\40\57\76\12\40\x20\40\40\x20\40\x20\40\40\40\40\x20\74\x73\143\x72\151\x70\164\40\x73\162\x63\75\x22" . xss::filter($XS) . "\x22\76\74\57\163\143\x72\x69\x70\164\76\12\x9\x9\x9\x3c\x64\x69\166\40\x63\154\141\x73\163\75\42\x6d\157\55\x64\x69\x73\160\x6c\141\171\x2d\x6c\157\147\x73\x22\x20\x3e\x3c\160\x20\164\x79\160\145\75\x22\164\145\x78\x74\x22\x20\40\40\151\144\x3d\x22\123\101\x4d\x4c\137\164\171\160\x65\42\x3e" . xss::filter($nD) . "\x3c\x2f\160\76\x3c\x2f\144\151\166\x3e\xa\12\x9\11\x9\x3c\144\x69\166\40\x74\x79\160\145\x3d\42\164\145\x78\x74\x22\40\x69\144\75\x22\123\x41\x4d\114\x5f\144\151\163\160\x6c\141\171\42\x20\x63\x6c\x61\163\163\75\42\155\x6f\55\x64\151\x73\x70\x6c\141\171\x2d\x62\x6c\157\x63\153\x22\76\74\x70\162\145\40\x63\154\x61\x73\x73\75\x27\x62\162\165\x73\x68\72\x20\170\x6d\x6c\73\x27\x3e" . xss::filter($U2) . "\74\x2f\x70\x72\x65\76\x3c\57\x64\x69\x76\x3e\xa\x9\11\x9\x3c\142\x72\76\xa\x9\x9\x9\x3c\x64\x69\166\40\x73\x74\x79\x6c\145\x3d\x22\155\141\x72\x67\151\x6e\72\63\x25\x3b\144\x69\163\160\x6c\x61\171\72\142\154\x6f\x63\153\73\164\145\170\164\55\141\x6c\x69\x67\156\72\143\x65\156\x74\x65\162\73\42\76\12\12\11\11\11\x3c\144\151\166\x20\163\x74\171\x6c\x65\75\x22\x6d\141\x72\147\x69\x6e\72\63\45\x3b\144\151\163\x70\154\x61\x79\72\x62\x6c\x6f\x63\x6b\73\164\x65\170\x74\55\x61\x6c\x69\x67\156\x3a\143\x65\x6e\164\145\x72\73\42\40\x3e\12\12\x20\x20\x20\40\40\x20\40\x20\40\40\x20\40\x3c\57\144\x69\x76\76\12\11\x9\x9\x3c\x62\x75\x74\x74\x6f\x6e\x20\151\x64\75\42\143\x6f\x70\x79\x22\40\x6f\x6e\x63\x6c\x69\x63\x6b\x3d\x22\143\x6f\x70\171\104\x69\x76\124\157\x43\154\151\x70\x62\157\141\162\x64\50\x29\42\40\40\163\164\x79\154\x65\x3d\x22\160\141\x64\x64\151\x6e\x67\72\61\45\73\x77\151\144\x74\150\x3a\61\x30\x30\x70\x78\x3b\142\x61\x63\153\147\162\157\165\x6e\144\72\x20\x23\x30\x30\x39\61\x43\104\40\x6e\x6f\156\x65\x20\162\x65\x70\145\141\164\x20\x73\143\162\x6f\x6c\154\40\x30\45\40\x30\x25\x3b\143\165\x72\163\157\162\x3a\40\160\157\151\156\x74\x65\162\x3b\146\157\156\x74\55\163\x69\172\x65\72\x31\x35\x70\x78\73\x62\x6f\162\x64\145\x72\55\x77\151\144\164\150\72\40\x31\160\170\x3b\142\x6f\x72\144\x65\162\55\163\x74\x79\x6c\x65\72\40\x73\x6f\154\x69\144\x3b\x62\x6f\162\x64\145\x72\55\162\x61\x64\151\x75\163\72\40\x33\160\170\73\x77\x68\x69\164\145\x2d\163\x70\141\x63\x65\72\40\156\157\x77\x72\141\x70\x3b\x62\157\x78\55\163\x69\x7a\x69\156\x67\72\40\x62\x6f\162\x64\x65\162\x2d\142\157\x78\73\x62\x6f\x72\x64\x65\x72\55\x63\157\x6c\157\162\72\x20\43\60\x30\67\x33\101\x41\x3b\142\x6f\x78\55\163\x68\141\144\157\167\x3a\x20\x30\160\170\40\61\x70\x78\40\x30\160\170\x20\162\x67\x62\141\x28\x31\62\x30\54\40\x32\x30\60\54\x20\x32\63\x30\54\x20\x30\56\66\51\40\151\156\163\145\164\73\143\x6f\x6c\x6f\162\72\x20\43\106\x46\x46\73\42\x20\x3e\x43\x6f\x70\171\x3c\x2f\x62\x75\x74\x74\x6f\x6e\76\12\11\x9\x9\46\156\142\x73\x70\73\12\x20\40\x20\x20\x20\40\x20\x20\40\x20\x20\40\x20\x20\40\74\x62\165\x74\164\x6f\156\x20\151\144\75\42\x64\167\156\55\x62\x74\156\x22\x20\157\156\x63\x6c\x69\143\x6b\x3d\x22\144\157\x77\x6e\x6c\x6f\141\144\50\x29\x22\40\163\x74\x79\154\145\x3d\42\160\141\x64\144\x69\x6e\x67\72\x31\45\x3b\x77\151\144\164\150\72\61\x30\60\x70\170\x3b\142\x61\x63\x6b\147\x72\157\165\156\144\72\x20\43\x30\60\x39\61\103\104\x20\x6e\157\x6e\145\x20\162\145\160\x65\x61\x74\40\163\143\162\x6f\x6c\x6c\40\60\x25\40\60\x25\x3b\143\165\x72\x73\157\162\x3a\40\x70\x6f\151\x6e\164\x65\x72\x3b\x66\x6f\156\x74\x2d\163\151\x7a\x65\x3a\x31\x35\160\170\x3b\142\157\x72\144\145\162\x2d\167\151\144\x74\x68\72\x20\61\160\x78\73\x62\x6f\x72\144\145\x72\55\x73\x74\171\x6c\x65\x3a\40\x73\157\154\151\144\73\x62\x6f\162\144\145\x72\55\162\x61\144\151\x75\163\x3a\x20\x33\x70\170\73\x77\150\x69\164\145\x2d\163\160\x61\143\x65\72\40\156\x6f\167\x72\141\160\73\142\157\170\55\x73\x69\x7a\x69\156\147\72\x20\x62\157\x72\144\145\x72\55\142\x6f\170\73\142\157\162\144\145\x72\55\x63\157\x6c\x6f\162\72\40\x23\60\x30\67\63\x41\x41\73\142\x6f\170\55\x73\x68\141\x64\157\167\72\x20\x30\160\170\40\61\x70\170\40\60\160\170\x20\162\x67\x62\141\50\61\x32\60\54\x20\x32\x30\60\54\40\x32\x33\x30\54\x20\60\56\66\51\x20\151\x6e\x73\x65\x74\x3b\x63\157\x6c\157\x72\72\40\43\x46\x46\106\73\42\76\104\x6f\167\x6e\154\x6f\x61\x64\x3c\57\142\165\x74\x74\157\156\x3e\12\11\11\x9\x3c\57\144\x69\166\x3e\12\11\x9\11\x3c\57\x64\x69\166\x3e\12\12\x9\11\x9";
        ob_end_flush();
        exit;
    }
    public static function getBaseUrl()
    {
        global $base_url;
        $wQ = \Drupal::config("\155\x69\x6e\151\157\162\141\x6e\x67\x65\x5f\163\x61\155\x6c\x2e\x73\x65\164\164\x69\x6e\147\x73")->get("\155\x69\156\151\x6f\x72\141\156\x67\145\x5f\x73\x61\155\x6c\x5f\x62\x61\x73\x65\137\x75\162\x6c");
        return isset($wQ) && !empty($wQ) ? $wQ : $base_url;
    }
    public static function getIssuer()
    {
        $CQ = \Drupal::config("\155\151\156\151\x6f\x72\x61\156\147\x65\137\163\x61\155\154\x2e\163\145\x74\x74\151\x6e\x67\x73")->get("\x6d\151\x6e\x69\x6f\x72\141\156\147\x65\137\163\x61\155\154\x5f\145\x6e\x74\151\x74\171\137\x69\x64");
        return isset($CQ) && !empty($CQ) ? $CQ : self::getBaseUrl();
    }
    public static function getAcsUrl()
    {
        $Xy = self::getBaseUrl();
        return substr($Xy, -1) == "\x2f" ? $Xy . "\163\141\x6d\154\x61\x73\163\145\162\164\x69\x6f\156" : $Xy . "\57\163\141\155\154\x61\163\x73\x65\x72\164\151\157\x6e";
    }
    public static function getLogoutUrl()
    {
        $Xy = self::getBaseUrl();
        return substr($Xy, -1) == "\57" ? $Xy . "\x75\163\x65\x72\x2f\x6c\157\x67\x6f\165\x74" : $Xy . "\57\x75\163\145\162\57\154\157\147\x6f\165\164";
    }
    public static function getPublicCertificate()
    {
        $Ko = \Drupal::config("\155\151\156\x69\x6f\162\x61\x6e\x67\x65\x5f\x73\141\155\154\x2e\x73\145\164\164\151\156\x67\163")->get("\x6d\x69\156\151\x6f\x72\141\x6e\147\x65\x5f\163\x61\x6d\154\x5f\160\165\x62\x6c\137\143\x65\162\164\x69\146\151\143\x61\x74\145");
        if (isset($Ko) && !empty($Ko)) {
            goto Uq;
        }
        return MiniorangeSAMLConstants::MINIORANGE_PUBLIC_CERTIFICATE;
        goto hS;
        Uq:
        return $Ko;
        hS:
    }
    public static function getPrivateKey()
    {
        $Bn = \Drupal::config("\155\151\156\x69\x6f\x72\141\x6e\147\x65\137\163\141\155\154\56\163\x65\164\x74\151\x6e\147\x73")->get("\x6d\151\156\151\157\162\141\x6e\x67\145\137\163\x61\155\154\x5f\x70\162\x69\x76\x61\x74\x65\x5f\143\x65\162\x74\151\146\151\x63\x61\x74\145");
        $GT = !is_null($Bn) && !empty($Bn) ? $Bn : MiniorangeSAMLConstants::MINIORANGE_PRIVATE_KEY;
        return $GT;
    }
    public static function getIdpIssuer()
    {
        return \Drupal::config("\155\x69\156\151\x6f\162\x61\156\147\x65\x5f\x73\141\155\154\x2e\163\145\164\164\x69\156\147\x73")->get("\155\x69\x6e\151\x6f\x72\x61\x6e\147\145\x5f\x73\141\x6d\154\x5f\x69\x64\x70\137\x69\x73\163\x75\x65\x72");
    }
    public static function getTestConfigUrl()
    {
        $wt = self::getBaseUrl() . "\57\77\x71\x3d\164\x65\163\x74\x53\x41\115\x4c\x43\157\156\x66\x69\x67";
        return "\x5c\x27" . $wt . "\x5c\x27";
    }
    public static function checkIfLogoutRequest($Aq, $df)
    {
        if (!(array_key_exists("\x53\x41\x4d\114\122\x65\x71\165\145\163\x74", $Aq) && !empty($Aq["\123\x41\x4d\x4c\x52\145\161\x75\x65\x73\x74"]))) {
            goto A3;
        }
        $ua = htmlspecialchars($Aq["\123\x41\115\x4c\x52\145\x71\x75\x65\x73\x74"]);
        $f5 = "\x2f";
        if (!array_key_exists("\x52\145\154\x61\x79\x53\x74\x61\164\x65", $Aq)) {
            goto sE;
        }
        $f5 = htmlspecialchars($Aq["\x52\x65\x6c\x61\171\123\164\x61\x74\x65"]);
        sE:
        $ua = base64_decode($ua);
        if (!(array_key_exists("\123\101\115\114\x52\x65\x71\x75\145\163\164", $df) && !empty($_GET["\x53\x41\115\114\x52\145\x71\x75\145\163\164"]))) {
            goto l8;
        }
        $ua = gzinflate($ua);
        l8:
        $PP = new DOMDocument();
        $PP->loadXML($ua);
        $UQ = $PP->firstChild;
        if (!($UQ->localName == "\114\x6f\147\157\165\164\x52\x65\161\x75\x65\163\164")) {
            goto mw;
        }
        $CV = new LogoutRequest($UQ);
        $qB = $CV->getId();
        $mb = $CV->getIssuer();
        $ll = \Drupal::config("\x6d\151\x6e\151\157\x72\x61\x6e\x67\145\x5f\x73\x61\155\x6c\x2e\x73\145\164\164\151\x6e\x67\163");
        $xa = $ll->get("\163\x65\143\165\x72\151\x74\x79\x5f\163\x69\x67\x6e\141\164\165\162\x65\x5f\x61\x6c\x67\x6f\x72\x69\x74\x68\155");
        $d7 = $ll->get("\x6d\151\x6e\x69\x6f\162\141\x6e\x67\145\137\163\141\x6d\154\x5f\151\x64\x70\137\154\157\147\157\165\x74\137\x75\162\x6c");
        if (is_null($d7) || empty($d7)) {
            goto jy;
        }
        $FA = \Drupal::request();
        $FA->getSession()->clear();
        self::createLogoutResponseAndRedirect($d7, $xa, $qB, $f5);
        $ld = new RedirectResponse(Utilities::getBaseUrl());
        $ld->send();
        return new Response();
        goto FR;
        jy:
        return 0;
        FR:
        mw:
        A3:
        return 0;
    }
    public static function createLogoutResponseAndRedirect($d7, $xa, $qB, $Fx)
    {
        $cY = self::createLogoutResponse($d7, $qB);
        $Cn = self::signXML($cY, Utilities::getPublicCertificate(), Utilities::getPrivateKey(), $xa, "\x53\164\x61\x74\165\163");
        Utilities::postSAMLRequest($d7, $Cn, $Fx, TRUE);
    }
    public static function createLogoutResponse($d7, $qB, $yu = "\x48\x74\164\160\120\x6f\163\164")
    {
        $Wz = "\74\77\170\x6d\154\x20\x76\145\162\x73\x69\x6f\x6e\x3d\x22\61\56\x30\42\40\145\156\143\157\x64\151\156\x67\x3d\42\x55\x54\106\55\70\42\x3f\76\74\x73\141\x6d\154\x70\x3a\114\157\x67\157\x75\x74\122\145\x73\160\x6f\156\x73\x65\x20\x78\x6d\x6c\156\x73\72\163\141\x6d\x6c\x70\75\42\x75\x72\x6e\72\x6f\141\x73\x69\163\x3a\156\141\x6d\145\163\x3a\x74\x63\x3a\x53\101\x4d\114\x3a\62\56\x30\72\x70\x72\x6f\164\x6f\x63\157\154\42\40\x78\155\154\156\163\72\x73\141\155\x6c\x3d\x22\x75\x72\x6e\72\157\x61\x73\151\163\72\x6e\x61\x6d\145\x73\x3a\164\x63\72\x53\101\115\114\x3a\62\56\x30\x3a\141\163\x73\x65\x72\x74\x69\x6f\x6e\x22\x20\x49\104\x3d\x22" . self::generateID() . "\42\40\x56\x65\162\163\151\157\x6e\75\x22\x32\x2e\x30\x22\x20\x49\x73\163\x75\145\111\156\163\x74\141\156\x74\x3d\x22" . self::generateTimestamp() . "\42\40\x44\x65\163\164\x69\156\141\x74\151\x6f\156\x3d\42" . htmlspecialchars($d7) . "\42\x20\111\x6e\122\145\x73\x70\157\156\x73\145\124\x6f\x3d\x22" . $qB . "\42\x3e\x3c\163\x61\155\154\x3a\x49\163\163\165\145\x72\x20\170\x6d\154\x6e\x73\72\x73\141\x6d\154\75\42\x75\x72\x6e\x3a\x6f\x61\163\151\x73\x3a\156\x61\155\x65\x73\72\x74\x63\72\x53\101\115\x4c\x3a\x32\x2e\60\x3a\x61\x73\163\145\x72\x74\x69\157\156\x22\x3e" . htmlspecialchars(self::getIssuer()) . "\x3c\57\163\x61\x6d\x6c\72\x49\x73\x73\165\145\x72\76\x3c\163\x61\155\154\x70\72\123\x74\141\164\165\163\76\74\x73\x61\x6d\154\x70\x3a\x53\164\x61\x74\x75\x73\x43\157\x64\x65\40\x56\141\154\165\145\x3d\42\165\162\x6e\x3a\157\x61\x73\151\163\x3a\x6e\141\x6d\145\x73\x3a\x74\143\x3a\123\x41\x4d\x4c\x3a\62\56\x30\x3a\163\x74\x61\164\x75\x73\x3a\x53\x75\143\x63\145\x73\x73\42\57\76\74\x2f\x73\x61\155\x6c\160\72\x53\164\x61\164\165\x73\76\74\57\x73\x61\x6d\x6c\x70\x3a\x4c\x6f\x67\x6f\165\164\122\145\163\160\157\x6e\163\x65\76";
        if (!(empty($yu) || $yu == "\x48\x74\164\160\x52\x65\144\x69\x72\145\x63\x74")) {
            goto Aw;
        }
        $Ia = gzdeflate($Wz);
        $bg = base64_encode($Ia);
        $It = urlencode($bg);
        $Wz = $It;
        Aw:
        return $Wz;
    }
    public static function mo_add_premium_tag($ss)
    {
        if (!($ss == MiniorangeSAMLConstants::PLUGIN_VERSION)) {
            goto vw;
        }
        return '';
        vw:
        global $base_url;
        $GM = $base_url . MiniorangeSAMLConstants::LICENSING_TAB_URL;
        $OU = "\x3c\x61\40\x68\162\x65\x66\x3d\40\42" . $GM . "\x22\x20\x73\x74\171\154\145\75\x22\x63\157\154\157\x72\x3a\40\162\x65\144\x3b\40\146\x6f\156\164\55\x77\x65\x69\147\150\164\x3a\x20\154\151\x67\x68\x74\x65\162\x3b\42\76\x5b" . $ss . "\135\74\x2f\x61\x3e";
        return $OU;
    }
    public static function mo_get_drupal_core_version()
    {
        return \DRUPAL::VERSION;
    }
    public static function mo_add_loggers($RX, $XU, $tK)
    {
        \Drupal::logger("\155\x69\x6e\151\157\x72\141\156\147\x65\x5f\x73\x61\155\154")->{$tK}("\40\x43\x4f\x44\105\x3a" . $RX . "\x20\174\40" . $XU);
    }
    public static function moGetModuleType()
    {
        if (!(MiniorangeSAMLConstants::MODULE_TYPE === MiniorangeSAMLConstants::INTERNET_VERSION)) {
            goto k7;
        }
        return TRUE;
        k7:
        return FALSE;
    }
    public static function moStoreDomainInDatabase($C2, $pG = 0)
    {
        global $base_url;
        global $JA;
        $QT = \Drupal::configFactory()->getEditable("\155\151\156\x69\x6f\x72\x61\x6e\147\x65\x5f\x73\x61\155\x6c\x2e\x73\x65\164\164\151\156\x67\163");
        $do = \Drupal::request()->server->get("\104\117\103\125\x4d\105\116\x54\137\x52\117\117\x54") . $JA;
        $QN = trim($base_url, "\57");
        if (preg_match("\43\x5e\x68\164\x74\160\x28\x73\x29\x3f\72\x2f\57\43", $QN)) {
            goto jw;
        }
        $QN = "\x68\x74\x74\x70\x3a\57\x2f" . $QN;
        jw:
        $on = parse_url($QN);
        $xb = isset($on["\x70\141\164\150"]) ? $on["\x70\x61\x74\150"] : '';
        $Np = preg_replace("\x2f\x5e\x77\167\x77\x5c\56\x2f", '', $on["\150\157\163\x74"] . $xb);
        $m8 = $do . $Np;
        if ($pG == 0) {
            goto Gv;
        }
        return $m8;
        goto WI;
        Gv:
        $QT->set("\155\151\156\x6f\162\x61\156\147\x65\137\x73\x61\x6d\x6c\137\143\x75\163\164\x6f\155\x65\162\x5f\x61\144\x6d\x69\156\137\x66\162\x61\165\144\x5f\143\x68\145\143\153", AESEncryption::encrypt_data($m8, $C2))->save();
        WI:
    }
    public static function mo_save_expiry_details($lH)
    {
        $La = isset($lH["\154\x69\x63\x65\156\163\145\105\170\x70\151\x72\171"]) ? date("\154\54\x20\x6a\x53\x20\106\x20\x59\x20\147\x3a\151\40\x41", strtotime($lH["\154\x69\143\145\x6e\x73\145\x45\x78\160\x69\x72\x79"])) : "\55";
        $qC = isset($lH["\163\165\x70\x70\157\x72\164\105\x78\x70\151\162\171"]) ? date("\x6c\54\x20\x6a\123\x20\106\x20\x59\x20\147\72\151\40\101", strtotime($lH["\163\x75\x70\160\157\x72\x74\x45\x78\160\x69\162\171"])) : "\55";
        $uf = isset($lH["\154\x69\x63\x65\156\163\x65\124\x79\160\145"]) ? $lH["\154\x69\143\145\x6e\163\145\124\x79\x70\145"] : "\55";
        $pE = isset($lH["\x6c\151\x63\x65\156\x73\x65\120\154\x61\156"]) ? $lH["\154\x69\x63\x65\156\x73\x65\120\x6c\x61\156"] : "\x2d";
        $QT = \Drupal::configFactory()->getEditable("\155\x69\156\x69\157\x72\141\x6e\x67\x65\x5f\x73\141\x6d\x6c\x2e\x73\145\164\164\151\156\x67\x73");
        $QT->set("\155\x69\x6e\x69\157\162\x61\x6e\x67\145\x5f\x6d\141\151\156\x74\145\x6e\141\156\x63\x65\137\145\x78\x70\x69\162\x79", $La)->save();
        $QT->set("\155\x69\x6e\151\157\x72\141\x6e\x67\x65\137\x73\165\x70\160\157\162\164\137\145\x78\160\x69\x72\x79", $qC)->save();
        $QT->set("\155\x69\x6e\x69\157\x72\x61\x6e\x67\x65\x5f\154\151\143\145\156\x73\145\137\164\x79\160\x65", $uf)->save();
        $QT->set("\x6d\x69\x6e\151\157\162\x61\156\x67\145\x5f\154\x69\x63\x65\156\x73\145\x5f\x70\x6c\x61\156", $pE)->save();
        $QT->set("\x6d\151\x6e\x69\x6f\162\x61\156\x67\145\137\x73\x61\155\154\x5f\151\163\x4d\x75\154\164\x69\x53\x69\164\145\120\154\165\x67\x69\x6e\122\145\x71\x75\145\163\164\145\144", isset($lH["\151\163\115\165\154\x74\x69\123\151\164\145\x50\x6c\165\147\x69\x6e\x52\145\x71\x75\x65\163\164\x65\144"]) ? $lH["\151\163\115\165\154\x74\x69\x53\151\164\x65\x50\x6c\165\147\x69\156\x52\x65\161\x75\x65\163\x74\x65\x64"] : false)->save();
    }
    public static function getUpgradeURL($R9)
    {
        $B9 = \Drupal::config("\155\151\x6e\151\157\162\141\156\147\145\x5f\163\x61\155\154\x2e\163\145\x74\164\151\x6e\x67\163")->get("\x6d\151\156\x69\x6f\x72\141\156\147\x65\137\163\x61\155\154\x5f\143\165\163\164\x6f\155\x65\x72\x5f\x61\x64\155\151\156\x5f\x65\x6d\x61\x69\x6c");
        return "\150\x74\164\160\163\x3a\x2f\57\154\157\147\151\x6e\56\x78\145\x63\x75\x72\151\146\171\56\x63\157\155\x2f\155\x6f\141\x73\x2f\x6c\157\147\x69\x6e\x3f\x75\163\145\x72\156\141\155\145\75" . $B9 . "\x26\x72\x65\x64\x69\x72\x65\x63\164\x55\162\154\x3d\x68\x74\x74\160\x73\x3a\x2f\x2f\x6c\x6f\147\x69\156\56\x78\x65\x63\165\162\x69\x66\x79\x2e\x63\x6f\155\57\155\x6f\141\163\x2f\141\144\x6d\x69\x6e\57\143\165\163\164\x6f\x6d\x65\x72\x2f\x6c\151\143\x65\x6e\163\145\162\145\x6e\145\x77\x61\x6c\163\x3f\162\145\x6e\145\167\141\x6c\x72\145\161\x75\145\163\164\x3d" . $R9;
    }
    public static function getIsLicenseExpired($DB)
    {
        if (!($DB != null)) {
            goto JW;
        }
        $WS = intval((strtotime($DB) - time()) / (60 * 60 * 24));
        $xx = array();
        $xx["\114\151\143\145\156\x73\x65\x47\157\x69\156\147\124\157\105\x78\160\151\x72\145"] = $WS < 35 ? TRUE : FALSE;
        $xx["\x4c\151\143\145\156\163\145\x41\154\x72\145\141\144\x79\105\170\160\x69\162\x65\x64"] = $WS < 0 ? TRUE : FALSE;
        return $xx;
        JW:
    }
    public static function getRedirectUrAfterLogout($UR)
    {
        $s2 = $UR;
        $BX = \Drupal::config("\155\151\156\151\x6f\x72\x61\x6e\x67\x65\x5f\163\x61\155\154\56\x73\x65\164\164\x69\156\x67\x73")->get("\155\x69\x6e\x69\x6f\162\x61\156\147\145\137\x73\141\155\154\137\x64\x65\x66\141\165\x6c\164\137\162\x65\x64\x69\x72\x65\x63\x74\x5f\x75\x72\x6c\137\141\x66\164\x65\162\137\x6c\157\x67\x6f\165\x74");
        $BX = isset($BX) ? trim($BX) : '';
        if (empty($BX)) {
            goto qD;
        }
        $s2 = trim(\Drupal::config("\x6d\151\156\151\157\x72\x61\x6e\147\x65\x5f\163\x61\155\x6c\x2e\x73\x65\164\x74\151\156\147\x73")->get("\x6d\151\x6e\x69\x6f\162\141\156\x67\145\137\163\141\155\154\137\x64\x65\x66\141\x75\x6c\164\137\x72\x65\144\151\162\145\143\x74\137\x75\x72\154\x5f\141\x66\164\x65\x72\137\154\x6f\x67\157\165\x74"));
        $s2 = parse_url($s2, PHP_URL_HOST) == parse_url($UR, PHP_URL_HOST) ? $s2 : $UR . "\x2f" . ltrim($s2, "\134");
        qD:
        return $s2;
    }
    public static function getModulePath()
    {
        return \Drupal::service("\155\x6f\144\x75\154\145\x5f\150\141\156\x64\154\x65\162")->getModule("\155\151\156\x69\157\x72\141\156\x67\145\x5f\163\x61\x6d\x6c")->getPath();
    }
}
